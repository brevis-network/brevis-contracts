{
  "address": "0x56979Fd34a06518B918BFda0B50d62Cc856f6064",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "isSmtRootValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "chainId",
          "type": "uint64"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "newSmtRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "endBlockNum",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "endBlockHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "nextChunkMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "circuitDigest",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[8]",
              "name": "proof",
              "type": "uint256[8]"
            },
            {
              "internalType": "uint256[2]",
              "name": "commit",
              "type": "uint256[2]"
            },
            {
              "internalType": "uint256[2]",
              "name": "knowledgeProof",
              "type": "uint256[2]"
            }
          ],
          "internalType": "struct ISMT.SmtUpdate",
          "name": "u",
          "type": "tuple"
        }
      ],
      "name": "updateRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xfc994d163c63fc1fe4076093c8d7ae786851610dbb11c1a90d99c00fc65ed3ec",
  "receipt": {
    "to": null,
    "from": "0x58b529F9084D7eAA598EB3477Fe36064C5B7bbC1",
    "contractAddress": "0x56979Fd34a06518B918BFda0B50d62Cc856f6064",
    "transactionIndex": 1,
    "gasUsed": "221662",
    "logsBloom": "0x
    "blockHash": "0x06effa15907af3d568a544ea4adb1030b1371fbce4366f003de122b81334245b",
    "transactionHash": "0xfc994d163c63fc1fe4076093c8d7ae786851610dbb11c1a90d99c00fc65ed3ec",
    "logs": [],
    "blockNumber": 305841960,
    "cumulativeGasUsed": "221662",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d45907f8c6be2e074ce399ac251f3c6c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"isSmtRootValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"newSmtRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"endBlockNum\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"endBlockHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nextChunkMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"circuitDigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[8]\",\"name\":\"proof\",\"type\":\"uint256[8]\"},{\"internalType\":\"uint256[2]\",\"name\":\"commit\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"knowledgeProof\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct ISMT.SmtUpdate\",\"name\":\"u\",\"type\":\"tuple\"}],\"name\":\"updateRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test-helper/MockSMT.sol\":\"MockSMT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/ISMT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport \\\"../verifiers/zk-verifiers/common/IVerifier.sol\\\";\\n\\ninterface ISMT {\\n    struct SmtUpdate {\\n        bytes32 newSmtRoot;\\n        uint64 endBlockNum;\\n        bytes32 endBlockHash;\\n        bytes32 nextChunkMerkleRoot;\\n        bytes32 circuitDigest;\\n        uint256[8] proof;\\n        uint256[2] commit;\\n        uint256[2] knowledgeProof;\\n    }\\n\\n    function updateRoot(uint64 chainId, SmtUpdate memory u) external;\\n\\n    function isSmtRootValid(uint64 chainId, bytes32 smtRoot) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf96afb7b4aa47c2cbad7a200c1bfdb04a1d28e08725469b2ebfaf4892a73bb29\",\"license\":\"MIT\"},\"contracts/test-helper/MockSMT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport \\\"../interfaces/ISMT.sol\\\";\\n\\ncontract MockSMT is ISMT {\\n    function updateRoot(uint64 chainId, SmtUpdate memory u) external {}\\n\\n    function isSmtRootValid(uint64, bytes32) external pure returns (bool) {\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x6f0d60d5d4344dfacb60dacdd058dc6cfd57c84a204b8b957bfd443d07e2e618\",\"license\":\"MIT\"},\"contracts/verifiers/zk-verifiers/common/IVerifier.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\ninterface IVerifier {\\n    function verifyProof(\\n        uint256[8] calldata proof,\\n        uint256[2] calldata commit,\\n        uint256[2] calldata knowledgeProof,\\n        uint256[9] calldata input\\n    ) external view returns (bool r);\\n}\\n\",\"keccak256\":\"0x856e6f88e5a1384f9a2460347b42bf44423ec28500bc7c82c43ac38a6b423082\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080806040523461001657610245908161001c8239f35b600080fdfe6080604090808252600436101561001557600080fd5b600090813560e01c9081631019b616146101995750636af2a83b1461003957600080fd5b3461019657610240366003190112610196576100536101bd565b506102203660231901126101965781516101009067ffffffffffffffff82820181811183821017610182578552602435825260443594818616860361017e576020958684015260643581840152608435606084015260a43560808401523660e3121561017e578051938401918211848310176101825752816101c49236841161017e578560c4915b85831061016f5750505060a0820152366101e3121561016b576100fc6101d9565b908161020493368511610167578690915b8583106101585750505060c001523661022312156101545761012d6101d9565b6102449136831161015057905b828210610145578380f35b90840190840161013a565b8380fd5b5080fd5b8235815291810191810161010d565b8580fd5b8280fd5b823581529181019181016100db565b8480fd5b634e487b7160e01b85526041600452602485fd5b80fd5b9050823461016b57366003190112610154576020906101b66101bd565b5060018152f35b6004359067ffffffffffffffff821682036101d457565b600080fd5b604051906040820182811067ffffffffffffffff8211176101f957604052565b634e487b7160e01b600052604160045260246000fdfea26469706673582212208365532207c6bce905dbe1c599c2fbdd0754ddd9918e7c81007fcd571a1aa1fc64736f6c63430008140033",
  "deployedBytecode": "0x6080604090808252600436101561001557600080fd5b600090813560e01c9081631019b616146101995750636af2a83b1461003957600080fd5b3461019657610240366003190112610196576100536101bd565b506102203660231901126101965781516101009067ffffffffffffffff82820181811183821017610182578552602435825260443594818616860361017e576020958684015260643581840152608435606084015260a43560808401523660e3121561017e578051938401918211848310176101825752816101c49236841161017e578560c4915b85831061016f5750505060a0820152366101e3121561016b576100fc6101d9565b908161020493368511610167578690915b8583106101585750505060c001523661022312156101545761012d6101d9565b6102449136831161015057905b828210610145578380f35b90840190840161013a565b8380fd5b5080fd5b8235815291810191810161010d565b8580fd5b8280fd5b823581529181019181016100db565b8480fd5b634e487b7160e01b85526041600452602485fd5b80fd5b9050823461016b57366003190112610154576020906101b66101bd565b5060018152f35b6004359067ffffffffffffffff821682036101d457565b600080fd5b604051906040820182811067ffffffffffffffff8211176101f957604052565b634e487b7160e01b600052604160045260246000fdfea26469706673582212208365532207c6bce905dbe1c599c2fbdd0754ddd9918e7c81007fcd571a1aa1fc64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}