{
  "address": "0x9D3d4c9876Ce85fcaDb4aa835C249DcaF4D56999",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "data",
          "type": "uint64"
        }
      ],
      "name": "DummyEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_data",
          "type": "uint64"
        }
      ],
      "name": "updateDummyEvent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xca9bd7abcd2526dabc05b3dcfba49f4089abf20fde2fb353349d8d33cb54f935",
  "receipt": {
    "to": null,
    "from": "0xe03B4133fFf5d4023ec125c11167E1ba8d7419DE",
    "contractAddress": "0x9D3d4c9876Ce85fcaDb4aa835C249DcaF4D56999",
    "transactionIndex": 12,
    "gasUsed": "213960",
    "logsBloom": "0x
    "blockHash": "0xa100fef82255cd84153240a6198be746912cbebd9f182d1cbdb60e1f56bca2d3",
    "transactionHash": "0xca9bd7abcd2526dabc05b3dcfba49f4089abf20fde2fb353349d8d33cb54f935",
    "logs": [
      {
        "transactionIndex": 12,
        "blockNumber": 14319506,
        "transactionHash": "0xca9bd7abcd2526dabc05b3dcfba49f4089abf20fde2fb353349d8d33cb54f935",
        "address": "0x9D3d4c9876Ce85fcaDb4aa835C249DcaF4D56999",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000e03b4133fff5d4023ec125c11167e1ba8d7419de"
        ],
        "data": "0x",
        "logIndex": 51,
        "blockHash": "0xa100fef82255cd84153240a6198be746912cbebd9f182d1cbdb60e1f56bca2d3"
      }
    ],
    "blockNumber": 14319506,
    "cumulativeGasUsed": "2736519",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "89d0b55acee773f093e51a0856ad4b5e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"data\",\"type\":\"uint64\"}],\"name\":\"DummyEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_data\",\"type\":\"uint64\"}],\"name\":\"updateDummyEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/plonky2-dummy/BrevisDummy.sol\":\"BrevisDummy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/plonky2-dummy/BrevisDummy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport \\\"../safeguard/Ownable.sol\\\";\\n\\ncontract BrevisDummy is Ownable {\\n    event DummyEvent(uint64 data);\\n\\n    function updateDummyEvent(uint64 _data) external onlyOwner {\\n        emit DummyEvent(_data);\\n    }\\n}\\n\",\"keccak256\":\"0xcbde1da63e46403a90cf347faddbdb97faf3a9b9fe2e5faf55aa1afdc64d4176\",\"license\":\"MIT\"},\"contracts/safeguard/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity ^0.8.18;\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n *\\n * This adds a normal func that setOwner if _owner is address(0). So we can't allow\\n * renounceOwnership. So we can support Proxy based upgradable contract\\n */\\nabstract contract Ownable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Only to be called by inherit contracts, in their init func called by Proxy\\n     * we require _owner == address(0), which is only possible when it's a delegateCall\\n     * because constructor sets _owner in contract state.\\n     */\\n    function initOwner() internal {\\n        require(_owner == address(0), \\\"owner already set\\\");\\n        _setOwner(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == msg.sender, \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x1e4163b2b1845766261562e5784f21cc74dd4eab16e6d05737477ea70e056ba1\",\"license\":\"GPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x6080806040523461005b5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361027790816100618239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c9081638da5cb5b146101c657508063f2fde38b146100bf5763f6b9ee441461004257600080fd5b346100bc5760203660031901126100bc5760043567ffffffffffffffff81168091036100b85760207ffcc00a4bc74238c0d621a60c235a07a52789cca8e03b6e03f90d0b0c6e7bbecb916100ae73ffffffffffffffffffffffffffffffffffffffff85541633146101f6565b604051908152a180f35b5080fd5b80fd5b50346100bc5760203660031901126100bc5760043573ffffffffffffffffffffffffffffffffffffffff8082168092036101c2578254908116906101043383146101f6565b8215610157577fffffffffffffffffffffffff000000000000000000000000000000000000000016821783557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608490fd5b8280fd5b9050346100b857816003193601126100b85773ffffffffffffffffffffffffffffffffffffffff60209254168152f35b156101fd57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea26469706673582212200b19ff9d9c0ddc4aef93f9ce1addbca1575ad32f63c0787eb06c4ae40a0e05e564736f6c63430008140033",
  "deployedBytecode": "0x608080604052600436101561001357600080fd5b600090813560e01c9081638da5cb5b146101c657508063f2fde38b146100bf5763f6b9ee441461004257600080fd5b346100bc5760203660031901126100bc5760043567ffffffffffffffff81168091036100b85760207ffcc00a4bc74238c0d621a60c235a07a52789cca8e03b6e03f90d0b0c6e7bbecb916100ae73ffffffffffffffffffffffffffffffffffffffff85541633146101f6565b604051908152a180f35b5080fd5b80fd5b50346100bc5760203660031901126100bc5760043573ffffffffffffffffffffffffffffffffffffffff8082168092036101c2578254908116906101043383146101f6565b8215610157577fffffffffffffffffffffffff000000000000000000000000000000000000000016821783557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608490fd5b8280fd5b9050346100b857816003193601126100b85773ffffffffffffffffffffffffffffffffffffffff60209254168152f35b156101fd57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea26469706673582212200b19ff9d9c0ddc4aef93f9ce1addbca1575ad32f63c0787eb06c4ae40a0e05e564736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 26,
        "contract": "contracts/plonky2-dummy/BrevisDummy.sol:BrevisDummy",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}