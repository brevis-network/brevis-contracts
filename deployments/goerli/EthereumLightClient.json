{
  "address": "0xEBBaD30cea39b546a53D22F3Ae2f44c8df761691",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "genesisTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "genesisValidatorsRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint64[]",
          "name": "_forkEpochs",
          "type": "uint64[]"
        },
        {
          "internalType": "bytes4[]",
          "name": "_forkVersions",
          "type": "bytes4[]"
        },
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "slot",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "proposerIndex",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "parentRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "stateRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "bodyRoot",
              "type": "bytes32"
            }
          ],
          "internalType": "struct BeaconBlockHeader",
          "name": "_finalizedHeader",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "syncCommitteeRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "syncCommitteePoseidonRoot",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "epoch",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "forkVersion",
          "type": "bytes4"
        }
      ],
      "name": "ForkVersionUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "stateRoot",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "executionStateRoot",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "finalized",
          "type": "bool"
        }
      ],
      "name": "HeaderUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "period",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "sszRoot",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "poseidonRoot",
          "type": "bytes32"
        }
      ],
      "name": "SyncCommitteeUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "bestValidUpdate",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "slot",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "proposerIndex",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "parentRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "stateRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "bodyRoot",
              "type": "bytes32"
            }
          ],
          "internalType": "struct BeaconBlockHeader",
          "name": "attestedHeader",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "slot",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "proposerIndex",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "parentRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "stateRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "bodyRoot",
              "type": "bytes32"
            }
          ],
          "internalType": "struct BeaconBlockHeader",
          "name": "finalizedHeader",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "finalizedExecutionStateRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "optimisticExecutionStateRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "nextSyncCommitteeRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "nextSyncCommitteePoseidonRoot",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "placeholder",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Proof",
          "name": "nextSyncCommitteeRootMappingProof",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "participation",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "poseidonRoot",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "placeholder",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct Proof",
              "name": "proof",
              "type": "tuple"
            }
          ],
          "internalType": "struct SyncAggregate",
          "name": "syncAggregate",
          "type": "tuple"
        },
        {
          "internalType": "uint64",
          "name": "signatureSlot",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentMaxActiveParticipants",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentSyncCommitteePoseidonRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentSyncCommitteeRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalizedExecutionStateRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalizedExecutionStateRootAndSlot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "slot",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalizedExecutionStateRootSlot",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalizedHeader",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "slot",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "proposerIndex",
          "type": "uint64"
        },
        {
          "internalType": "bytes32",
          "name": "parentRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "stateRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "bodyRoot",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "forkEpochs",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "forkVersions",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestFinalizedSlotAndCommitteeRoots",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "slot",
          "type": "uint64"
        },
        {
          "internalType": "bytes32",
          "name": "currentRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "nextRoot",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextSyncCommitteePoseidonRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextSyncCommitteeRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "optimisticExecutionStateRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "optimisticExecutionStateRootAndSlot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "slot",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "optimisticExecutionStateRootSlot",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "optimisticHeader",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "slot",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "proposerIndex",
          "type": "uint64"
        },
        {
          "internalType": "bytes32",
          "name": "parentRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "stateRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "bodyRoot",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "previousMaxActiveParticipants",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "slot",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "proposerIndex",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "parentRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "stateRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "bodyRoot",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct BeaconBlockHeader",
              "name": "attestedHeader",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "slot",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "proposerIndex",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "parentRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "stateRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "bodyRoot",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct BeaconBlockHeader",
              "name": "finalizedHeader",
              "type": "tuple"
            },
            {
              "internalType": "bytes32[]",
              "name": "finalityBranch",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes32",
              "name": "finalizedExecutionStateRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "finalizedExecutionStateRootBranch",
              "type": "bytes32[]"
            },
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "participation",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "poseidonRoot",
                  "type": "bytes32"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "placeholder",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct Proof",
                  "name": "proof",
                  "type": "tuple"
                }
              ],
              "internalType": "struct SyncAggregate",
              "name": "syncAggregate",
              "type": "tuple"
            },
            {
              "internalType": "uint64",
              "name": "signatureSlot",
              "type": "uint64"
            }
          ],
          "internalType": "struct LightClientFinalityUpdate",
          "name": "u",
          "type": "tuple"
        }
      ],
      "name": "processLightClientFinalityUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "processLightClientForceUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "slot",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "proposerIndex",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "parentRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "stateRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "bodyRoot",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct BeaconBlockHeader",
              "name": "attestedHeader",
              "type": "tuple"
            },
            {
              "internalType": "bytes32",
              "name": "optimisticExecutionStateRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "optimisticdExecutionStateRootBranch",
              "type": "bytes32[]"
            },
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "participation",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "poseidonRoot",
                  "type": "bytes32"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "placeholder",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct Proof",
                  "name": "proof",
                  "type": "tuple"
                }
              ],
              "internalType": "struct SyncAggregate",
              "name": "syncAggregate",
              "type": "tuple"
            },
            {
              "internalType": "uint64",
              "name": "signatureSlot",
              "type": "uint64"
            }
          ],
          "internalType": "struct LightClientOptimisticUpdate",
          "name": "u",
          "type": "tuple"
        }
      ],
      "name": "processLightClientOptimisticUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "slot",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "proposerIndex",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "parentRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "stateRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "bodyRoot",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct BeaconBlockHeader",
              "name": "attestedHeader",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "slot",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "proposerIndex",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "parentRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "stateRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "bodyRoot",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct BeaconBlockHeader",
              "name": "finalizedHeader",
              "type": "tuple"
            },
            {
              "internalType": "bytes32[]",
              "name": "finalityBranch",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes32",
              "name": "finalizedExecutionStateRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "finalizedExecutionStateRootBranch",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes32",
              "name": "optimisticExecutionStateRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "optimisticdExecutionStateRootBranch",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes32",
              "name": "nextSyncCommitteeRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "nextSyncCommitteeBranch",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes32",
              "name": "nextSyncCommitteePoseidonRoot",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "placeholder",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct Proof",
              "name": "nextSyncCommitteeRootMappingProof",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "participation",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "poseidonRoot",
                  "type": "bytes32"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "placeholder",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct Proof",
                  "name": "proof",
                  "type": "tuple"
                }
              ],
              "internalType": "struct SyncAggregate",
              "name": "syncAggregate",
              "type": "tuple"
            },
            {
              "internalType": "uint64",
              "name": "signatureSlot",
              "type": "uint64"
            }
          ],
          "internalType": "struct LightClientUpdate",
          "name": "update",
          "type": "tuple"
        }
      ],
      "name": "processLightClientUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "slot",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "proposerIndex",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "parentRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "stateRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "bodyRoot",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct BeaconBlockHeader",
              "name": "attestedHeader",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "slot",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "proposerIndex",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "parentRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "stateRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "bodyRoot",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct BeaconBlockHeader",
              "name": "finalizedHeader",
              "type": "tuple"
            },
            {
              "internalType": "bytes32[]",
              "name": "finalityBranch",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes32",
              "name": "nextSyncCommitteeRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "nextSyncCommitteeBranch",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes32",
              "name": "nextSyncCommitteePoseidonRoot",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "placeholder",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct Proof",
              "name": "nextSyncCommitteeRootMappingProof",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "participation",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "poseidonRoot",
                  "type": "bytes32"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "placeholder",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct Proof",
                  "name": "proof",
                  "type": "tuple"
                }
              ],
              "internalType": "struct SyncAggregate",
              "name": "syncAggregate",
              "type": "tuple"
            },
            {
              "internalType": "uint64",
              "name": "signatureSlot",
              "type": "uint64"
            }
          ],
          "internalType": "struct SyncCommitteeUpdate",
          "name": "u",
          "type": "tuple"
        }
      ],
      "name": "processSyncCommitteeUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "epoch",
          "type": "uint64"
        },
        {
          "internalType": "bytes4",
          "name": "forkVersion",
          "type": "bytes4"
        }
      ],
      "name": "updateForkVersion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x42f07350f39616141fa4db4cd027aed3b2636f738198b7e405ed6140d9db2ee3",
  "receipt": {
    "to": null,
    "from": "0x9532f934EfcE6c4Bf5BA078b25fDd81a780FBdfB",
    "contractAddress": "0xEBBaD30cea39b546a53D22F3Ae2f44c8df761691",
    "transactionIndex": 45,
    "gasUsed": "3461782",
    "logsBloom": "0x
    "blockHash": "0x26a0741da60bb039430c338ec62a30a412ba42ca51a0864d4cdf812025204532",
    "transactionHash": "0x42f07350f39616141fa4db4cd027aed3b2636f738198b7e405ed6140d9db2ee3",
    "logs": [
      {
        "transactionIndex": 45,
        "blockNumber": 8567397,
        "transactionHash": "0x42f07350f39616141fa4db4cd027aed3b2636f738198b7e405ed6140d9db2ee3",
        "address": "0xEBBaD30cea39b546a53D22F3Ae2f44c8df761691",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000009532f934efce6c4bf5ba078b25fdd81a780fbdfb"
        ],
        "data": "0x",
        "logIndex": 71,
        "blockHash": "0x26a0741da60bb039430c338ec62a30a412ba42ca51a0864d4cdf812025204532"
      }
    ],
    "blockNumber": 8567397,
    "cumulativeGasUsed": "10029676",
    "status": 1,
    "byzantium": true
  },
  "args": [
    1616508000,
    "0x043db0d9a83813551ee2f33450d23797757d430911a9320530ad8a0eabc43efb",
    [
      0
    ],
    [
      "0x00001020"
    ],
    {
      "slot": "5070304",
      "proposerIndex": "33168",
      "parentRoot": "0x72b6881be7ba1486fa1fab469fe86ef55a9c9e3504c64b59ef6d74bc7d9cbfc2",
      "stateRoot": "0x60b1ab1e4ba6615cbfc8de2831ede88c1239b59645ad495171e49cfea66ae6e0",
      "bodyRoot": "0xc5c03edf84a34272e3caf83779c018a8f2ad2cf756f5b94d09eba3bc57659f80"
    },
    "0xa740dc212a8d75da927ce87b47a08d9d3c5e2ade364b388033ac2b55bc71ba8b",
    "0x6190000000000000000000000000000000000000000000000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "6f853eebf45f840f2f6475a6b2f4f0a4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"genesisTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"genesisValidatorsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint64[]\",\"name\":\"_forkEpochs\",\"type\":\"uint64[]\"},{\"internalType\":\"bytes4[]\",\"name\":\"_forkVersions\",\"type\":\"bytes4[]\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"proposerIndex\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"parentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bodyRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct BeaconBlockHeader\",\"name\":\"_finalizedHeader\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"syncCommitteeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"syncCommitteePoseidonRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"epoch\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"forkVersion\",\"type\":\"bytes4\"}],\"name\":\"ForkVersionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"executionStateRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"finalized\",\"type\":\"bool\"}],\"name\":\"HeaderUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sszRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"poseidonRoot\",\"type\":\"bytes32\"}],\"name\":\"SyncCommitteeUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bestValidUpdate\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"proposerIndex\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"parentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bodyRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct BeaconBlockHeader\",\"name\":\"attestedHeader\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"proposerIndex\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"parentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bodyRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct BeaconBlockHeader\",\"name\":\"finalizedHeader\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"finalizedExecutionStateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"optimisticExecutionStateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nextSyncCommitteeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nextSyncCommitteePoseidonRoot\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"placeholder\",\"type\":\"bytes32\"}],\"internalType\":\"struct Proof\",\"name\":\"nextSyncCommitteeRootMappingProof\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"participation\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"poseidonRoot\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"placeholder\",\"type\":\"bytes32\"}],\"internalType\":\"struct Proof\",\"name\":\"proof\",\"type\":\"tuple\"}],\"internalType\":\"struct SyncAggregate\",\"name\":\"syncAggregate\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"signatureSlot\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMaxActiveParticipants\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentSyncCommitteePoseidonRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentSyncCommitteeRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalizedExecutionStateRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalizedExecutionStateRootAndSlot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalizedExecutionStateRootSlot\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalizedHeader\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"proposerIndex\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"parentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bodyRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"forkEpochs\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"forkVersions\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestFinalizedSlotAndCommitteeRoots\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"currentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nextRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextSyncCommitteePoseidonRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextSyncCommitteeRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"optimisticExecutionStateRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"optimisticExecutionStateRootAndSlot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"optimisticExecutionStateRootSlot\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"optimisticHeader\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"proposerIndex\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"parentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bodyRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"previousMaxActiveParticipants\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"proposerIndex\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"parentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bodyRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct BeaconBlockHeader\",\"name\":\"attestedHeader\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"proposerIndex\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"parentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bodyRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct BeaconBlockHeader\",\"name\":\"finalizedHeader\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"finalityBranch\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"finalizedExecutionStateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"finalizedExecutionStateRootBranch\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"participation\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"poseidonRoot\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"placeholder\",\"type\":\"bytes32\"}],\"internalType\":\"struct Proof\",\"name\":\"proof\",\"type\":\"tuple\"}],\"internalType\":\"struct SyncAggregate\",\"name\":\"syncAggregate\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"signatureSlot\",\"type\":\"uint64\"}],\"internalType\":\"struct LightClientFinalityUpdate\",\"name\":\"u\",\"type\":\"tuple\"}],\"name\":\"processLightClientFinalityUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"processLightClientForceUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"proposerIndex\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"parentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bodyRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct BeaconBlockHeader\",\"name\":\"attestedHeader\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"optimisticExecutionStateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"optimisticdExecutionStateRootBranch\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"participation\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"poseidonRoot\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"placeholder\",\"type\":\"bytes32\"}],\"internalType\":\"struct Proof\",\"name\":\"proof\",\"type\":\"tuple\"}],\"internalType\":\"struct SyncAggregate\",\"name\":\"syncAggregate\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"signatureSlot\",\"type\":\"uint64\"}],\"internalType\":\"struct LightClientOptimisticUpdate\",\"name\":\"u\",\"type\":\"tuple\"}],\"name\":\"processLightClientOptimisticUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"proposerIndex\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"parentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bodyRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct BeaconBlockHeader\",\"name\":\"attestedHeader\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"proposerIndex\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"parentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bodyRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct BeaconBlockHeader\",\"name\":\"finalizedHeader\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"finalityBranch\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"finalizedExecutionStateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"finalizedExecutionStateRootBranch\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"optimisticExecutionStateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"optimisticdExecutionStateRootBranch\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"nextSyncCommitteeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"nextSyncCommitteeBranch\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"nextSyncCommitteePoseidonRoot\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"placeholder\",\"type\":\"bytes32\"}],\"internalType\":\"struct Proof\",\"name\":\"nextSyncCommitteeRootMappingProof\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"participation\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"poseidonRoot\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"placeholder\",\"type\":\"bytes32\"}],\"internalType\":\"struct Proof\",\"name\":\"proof\",\"type\":\"tuple\"}],\"internalType\":\"struct SyncAggregate\",\"name\":\"syncAggregate\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"signatureSlot\",\"type\":\"uint64\"}],\"internalType\":\"struct LightClientUpdate\",\"name\":\"update\",\"type\":\"tuple\"}],\"name\":\"processLightClientUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"proposerIndex\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"parentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bodyRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct BeaconBlockHeader\",\"name\":\"attestedHeader\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"proposerIndex\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"parentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bodyRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct BeaconBlockHeader\",\"name\":\"finalizedHeader\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"finalityBranch\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"nextSyncCommitteeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"nextSyncCommitteeBranch\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"nextSyncCommitteePoseidonRoot\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"placeholder\",\"type\":\"bytes32\"}],\"internalType\":\"struct Proof\",\"name\":\"nextSyncCommitteeRootMappingProof\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"participation\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"poseidonRoot\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"placeholder\",\"type\":\"bytes32\"}],\"internalType\":\"struct Proof\",\"name\":\"proof\",\"type\":\"tuple\"}],\"internalType\":\"struct SyncAggregate\",\"name\":\"syncAggregate\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"signatureSlot\",\"type\":\"uint64\"}],\"internalType\":\"struct SyncCommitteeUpdate\",\"name\":\"u\",\"type\":\"tuple\"}],\"name\":\"processSyncCommitteeUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"epoch\",\"type\":\"uint64\"},{\"internalType\":\"bytes4\",\"name\":\"forkVersion\",\"type\":\"bytes4\"}],\"name\":\"updateForkVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/light-client/EthereumLightClient.sol\":\"EthereumLightClient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/interfaces/IEthereumLightClient.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity 0.8.18;\\n\\ninterface IEthereumLightClient {\\n    function finalizedExecutionStateRootAndSlot() external view returns (bytes32 root, uint64 slot);\\n\\n    function optimisticExecutionStateRootAndSlot() external view returns (bytes32 root, uint64 slot);\\n}\\n\",\"keccak256\":\"0x73cf818c021200c2bd19b068e6b163742bfec7a0300b22cdc1c0ee778cc011ce\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/light-client/Constants.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicensed\\npragma solidity 0.8.18;\\n\\n// light client security params\\nuint256 constant MIN_SYNC_COMMITTEE_PARTICIPANTS = 1;\\nuint256 constant UPDATE_TIMEOUT = 86400;\\n\\n// beacon chain constants\\nuint256 constant FINALIZED_ROOT_INDEX = 105;\\nuint256 constant NEXT_SYNC_COMMITTEE_INDEX = 55;\\nuint256 constant EXECUTION_STATE_ROOT_INDEX = 898;\\n// uint256 constant EXECUTION_STATE_ROOT_INDEX = 402;\\nuint256 constant SYNC_COMMITTEE_SIZE = 512;\\nuint64 constant SLOTS_PER_EPOCH = 32;\\nuint64 constant EPOCHS_PER_SYNC_COMMITTEE_PERIOD = 256;\\nbytes32 constant DOMAIN_SYNC_COMMITTEE = bytes32(uint256(0x07000000));\\nuint256 constant SLOT_LENGTH_SECONDS = 12;\\n\",\"keccak256\":\"0x4c4dd5c125267ba1e16ba1d3f92d99abbda3141e2b5790b92b45e593fb14c298\",\"license\":\"Unlicensed\"},\"contracts/light-client/EthereumLightClient.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicensed\\npragma solidity 0.8.18;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport \\\"../interfaces/IEthereumLightClient.sol\\\";\\n\\nimport \\\"./LightClientStore.sol\\\";\\nimport \\\"./ZkVerifier.sol\\\";\\nimport \\\"./SSZ.sol\\\";\\nimport \\\"./Constants.sol\\\";\\nimport \\\"./Types.sol\\\";\\n\\ncontract EthereumLightClient is IEthereumLightClient, LightClientStore, Ownable {\\n    event HeaderUpdated(uint256 slot, bytes32 stateRoot, bytes32 executionStateRoot, bool finalized);\\n    event SyncCommitteeUpdated(uint256 period, bytes32 sszRoot, bytes32 poseidonRoot);\\n    event ForkVersionUpdated(uint64 epoch, bytes4 forkVersion);\\n\\n    constructor(\\n        uint256 genesisTime,\\n        bytes32 genesisValidatorsRoot,\\n        uint64[] memory _forkEpochs,\\n        bytes4[] memory _forkVersions,\\n        BeaconBlockHeader memory _finalizedHeader,\\n        bytes32 syncCommitteeRoot,\\n        bytes32 syncCommitteePoseidonRoot\\n    )\\n        LightClientStore(\\n            genesisTime,\\n            genesisValidatorsRoot,\\n            _forkEpochs,\\n            _forkVersions,\\n            _finalizedHeader,\\n            syncCommitteeRoot,\\n            syncCommitteePoseidonRoot\\n        )\\n    {}\\n\\n    function latestFinalizedSlotAndCommitteeRoots() external view returns (uint64 slot, bytes32 currentRoot, bytes32 nextRoot) {\\n        return (finalizedHeader.slot, currentSyncCommitteeRoot, nextSyncCommitteeRoot);\\n    }\\n\\n    function finalizedExecutionStateRootAndSlot() external view returns (bytes32 root, uint64 slot) {\\n        return (finalizedExecutionStateRoot, finalizedExecutionStateRootSlot);\\n    }\\n\\n    function optimisticExecutionStateRootAndSlot() external view returns (bytes32 root, uint64 slot) {\\n        return (optimisticExecutionStateRoot, optimisticExecutionStateRootSlot);\\n    }\\n\\n    function updateForkVersion(uint64 epoch, bytes4 forkVersion) external onlyOwner {\\n        require(forkVersion != bytes4(0), \\\"invalid fork version\\\");\\n        forkEpochs.push(epoch);\\n        forkVersions.push(forkVersion);\\n        emit ForkVersionUpdated(epoch, forkVersion);\\n    }\\n\\n    function processLightClientFinalityUpdate(LightClientFinalityUpdate memory u) external {\\n        LightClientUpdate memory update = LightClientUpdate({\\n            attestedHeader: u.attestedHeader,\\n            finalizedHeader: u.finalizedHeader,\\n            finalityBranch: u.finalityBranch,\\n            finalizedExecutionStateRoot: u.finalizedExecutionStateRoot,\\n            finalizedExecutionStateRootBranch: u.finalizedExecutionStateRootBranch,\\n            syncAggregate: u.syncAggregate,\\n            signatureSlot: u.signatureSlot,\\n            // irrelavant fields\\n            optimisticExecutionStateRoot: bytes32(0),\\n            optimisticdExecutionStateRootBranch: new bytes32[](0),\\n            nextSyncCommitteeRoot: bytes32(0),\\n            nextSyncCommitteeBranch: new bytes32[](0),\\n            nextSyncCommitteePoseidonRoot: bytes32(0),\\n            nextSyncCommitteeRootMappingProof: emptyProof()\\n        });\\n        processLightClientUpdate(update);\\n    }\\n\\n    function processLightClientOptimisticUpdate(LightClientOptimisticUpdate memory u) external {\\n        LightClientUpdate memory update = LightClientUpdate({\\n            attestedHeader: u.attestedHeader,\\n            finalizedHeader: emptyBeaconBlockHeader(),\\n            optimisticExecutionStateRoot: u.optimisticExecutionStateRoot,\\n            optimisticdExecutionStateRootBranch: u.optimisticdExecutionStateRootBranch,\\n            syncAggregate: u.syncAggregate,\\n            signatureSlot: u.signatureSlot,\\n            // irrelavant fields\\n            finalityBranch: new bytes32[](0),\\n            finalizedExecutionStateRoot: bytes32(0),\\n            finalizedExecutionStateRootBranch: new bytes32[](0),\\n            nextSyncCommitteeRoot: bytes32(0),\\n            nextSyncCommitteeBranch: new bytes32[](0),\\n            nextSyncCommitteePoseidonRoot: bytes32(0),\\n            nextSyncCommitteeRootMappingProof: emptyProof()\\n        });\\n        processLightClientUpdate(update);\\n    }\\n\\n    function processSyncCommitteeUpdate(SyncCommitteeUpdate memory u) external {\\n        LightClientUpdate memory update = LightClientUpdate({\\n            attestedHeader: u.attestedHeader,\\n            nextSyncCommitteeRoot: u.nextSyncCommitteeRoot,\\n            nextSyncCommitteeBranch: u.nextSyncCommitteeBranch,\\n            nextSyncCommitteePoseidonRoot: u.nextSyncCommitteePoseidonRoot,\\n            finalizedHeader: u.finalizedHeader,\\n            finalityBranch: u.finalityBranch,\\n            syncAggregate: u.syncAggregate,\\n            signatureSlot: u.signatureSlot,\\n            nextSyncCommitteeRootMappingProof: u.nextSyncCommitteeRootMappingProof,\\n            // irrelavant fields\\n            finalizedExecutionStateRoot: bytes32(0),\\n            finalizedExecutionStateRootBranch: new bytes32[](0),\\n            optimisticExecutionStateRoot: bytes32(0),\\n            optimisticdExecutionStateRootBranch: new bytes32[](0)\\n        });\\n        processLightClientUpdate(update);\\n    }\\n\\n    function processLightClientForceUpdate() external onlyOwner {\\n        require(currentSlot() > finalizedHeader.slot + UPDATE_TIMEOUT, \\\"timeout not passed\\\");\\n        require(bestValidUpdate.attestedHeader.slot > 0, \\\"no best valid update\\\");\\n\\n        // Forced best update when the update timeout has elapsed.\\n        // Because the apply logic waits for finalizedHeader.slot to indicate sync committee finality,\\n        // the attestedHeader may be treated as finalizedHeader in extended periods of non-finality\\n        // to guarantee progression into later sync committee periods according to isBetterUpdate().\\n        if (bestValidUpdate.finalizedHeader.slot <= finalizedHeader.slot) {\\n            bestValidUpdate.finalizedHeader = bestValidUpdate.attestedHeader;\\n        }\\n        applyLightClientUpdate(bestValidUpdate);\\n        delete bestValidUpdate;\\n    }\\n\\n    function processLightClientUpdate(LightClientUpdate memory update) public {\\n        validateLightClientUpdate(update);\\n\\n        // Update the best update in case we have to force-update to it if the timeout elapses\\n        if (isBetterUpdate(update, bestValidUpdate)) {\\n            bestValidUpdate = update;\\n        }\\n\\n        // Track the maximum number of active participants in the committee signatures\\n        if (update.syncAggregate.participation > currentMaxActiveParticipants) {\\n            currentMaxActiveParticipants = update.syncAggregate.participation;\\n        }\\n\\n        // Apply optimistic update\\n        if (\\n            update.syncAggregate.participation > getSafetyThreshold() &&\\n            update.attestedHeader.slot > optimisticHeader.slot\\n        ) {\\n            optimisticHeader = update.attestedHeader;\\n            optimisticExecutionStateRoot = update.optimisticExecutionStateRoot;\\n            emit HeaderUpdated(\\n                update.attestedHeader.slot,\\n                update.attestedHeader.stateRoot,\\n                update.optimisticExecutionStateRoot,\\n                false\\n            );\\n        }\\n\\n        // Apply finality update\\n        bool updateHasFinalizedNextSyncCommittee = hasNextSyncCommitteeProof(update) &&\\n            hasFinalityProof(update) &&\\n            computeSyncCommitteePeriodAtSlot(update.finalizedHeader.slot) ==\\n            computeSyncCommitteePeriodAtSlot(update.attestedHeader.slot) &&\\n            nextSyncCommitteeRoot == bytes32(0);\\n        if (\\n            hasSupermajority(update.syncAggregate.participation) &&\\n            (update.finalizedHeader.slot > finalizedHeader.slot || updateHasFinalizedNextSyncCommittee)\\n        ) {\\n            applyLightClientUpdate(update);\\n            delete bestValidUpdate;\\n        }\\n    }\\n\\n    function validateLightClientUpdate(LightClientUpdate memory update) private view {\\n        // Verify sync committee has sufficient participants\\n        require(\\n            update.syncAggregate.participation > MIN_SYNC_COMMITTEE_PARTICIPANTS,\\n            \\\"not enough committee participation\\\"\\n        );\\n        // Verify update does not skip a sync committee period\\n        require(\\n            currentSlot() > update.attestedHeader.slot && update.attestedHeader.slot > update.finalizedHeader.slot,\\n            \\\"invalid slot\\\"\\n        );\\n        uint64 storePeriod = computeSyncCommitteePeriodAtSlot(finalizedHeader.slot);\\n        uint64 updatePeriod = computeSyncCommitteePeriodAtSlot(update.finalizedHeader.slot);\\n        require(updatePeriod == storePeriod || updatePeriod == storePeriod + 1);\\n\\n        // Verify update is relavant\\n        uint64 updateAttestedPeriod = computeSyncCommitteePeriodAtSlot(update.attestedHeader.slot);\\n        bool updateHasNextSyncCommittee = nextSyncCommitteeRoot == bytes32(0) &&\\n            hasNextSyncCommitteeProof(update) &&\\n            updateAttestedPeriod == storePeriod;\\n        // since sync committee update prefers older header (see isBetterUpdate), an update either\\n        // needs to have a newer header or it should have sync committee update.\\n        require(update.attestedHeader.slot > finalizedHeader.slot || updateHasNextSyncCommittee);\\n\\n        // Verify that the finalityBranch, if present, confirms finalizedHeader\\n        // to match the finalized checkpoint root saved in the state of attestedHeader.\\n        // Note that the genesis finalized checkpoint root is represented as a zero hash.\\n        if (!hasFinalityProof(update)) {\\n            require(isEmptyHeader(update.finalizedHeader), \\\"no finality proof\\\");\\n        } else {\\n            // genesis block header\\n            if (update.finalizedHeader.slot == 0) {\\n                require(isEmptyHeader(update.finalizedHeader), \\\"genesis header should be empty\\\");\\n            } else {\\n                bool isValidFinalityProof = SSZ.isValidMerkleBranch(\\n                    SSZ.hashTreeRoot(update.finalizedHeader),\\n                    update.finalityBranch,\\n                    FINALIZED_ROOT_INDEX,\\n                    update.attestedHeader.stateRoot\\n                );\\n                require(isValidFinalityProof, \\\"invalid finality proof\\\");\\n            }\\n        }\\n\\n        // Verify finalizedExecutionStateRoot\\n        if (!hasExecutionFinalityProof(update)) {\\n            require(update.finalizedExecutionStateRoot == bytes32(0), \\\"no execution finality proof\\\");\\n        } else {\\n            require(hasFinalityProof(update), \\\"no execution finality proof\\\");\\n            bool isValidFinalizedExecutionRootProof = SSZ.isValidMerkleBranch(\\n                update.finalizedExecutionStateRoot,\\n                update.finalizedExecutionStateRootBranch,\\n                EXECUTION_STATE_ROOT_INDEX,\\n                update.finalizedHeader.stateRoot\\n            );\\n            require(isValidFinalizedExecutionRootProof, \\\"invalid execution finality proof\\\");\\n        }\\n\\n        // Verify optimisticExecutionStateRoot\\n        if (!hasExecutionOptimisticProof(update)) {\\n            require(update.optimisticExecutionStateRoot == bytes32(0), \\\"no execution optimistic proof\\\");\\n        } else {\\n            bool isvalidOptimisticExecutionRootProof = SSZ.isValidMerkleBranch(\\n                update.optimisticExecutionStateRoot,\\n                update.optimisticdExecutionStateRootBranch,\\n                EXECUTION_STATE_ROOT_INDEX,\\n                update.attestedHeader.stateRoot\\n            );\\n            require(isvalidOptimisticExecutionRootProof, \\\"invalid execution optimistic proof\\\");\\n        }\\n\\n        // Verify that the update's nextSyncCommittee, if present, actually is the next sync committee\\n        // saved in the state of the update's finalizedHeader\\n        if (!hasNextSyncCommitteeProof(update)) {\\n            require(\\n                update.nextSyncCommitteeRoot == bytes32(0) && update.nextSyncCommitteePoseidonRoot == bytes32(0),\\n                \\\"no next sync committee proof\\\"\\n            );\\n        } else {\\n            if (updateAttestedPeriod == storePeriod && nextSyncCommitteeRoot != bytes32(0)) {\\n                require(update.nextSyncCommitteeRoot == nextSyncCommitteeRoot, \\\"invalid next sync committee\\\");\\n            }\\n            bool isValidSyncCommitteeProof = SSZ.isValidMerkleBranch(\\n                update.nextSyncCommitteeRoot,\\n                update.nextSyncCommitteeBranch,\\n                NEXT_SYNC_COMMITTEE_INDEX,\\n                update.attestedHeader.stateRoot\\n            );\\n            require(isValidSyncCommitteeProof, \\\"invalid next sync committee proof\\\");\\n            bool isValidCommitteeRootMappingProof = ZkVerifier.verifySyncCommitteeRootMappingProof(\\n                update.nextSyncCommitteeRoot,\\n                update.nextSyncCommitteePoseidonRoot,\\n                update.nextSyncCommitteeRootMappingProof\\n            );\\n            require(isValidCommitteeRootMappingProof, \\\"invalid next sync committee root mapping proof\\\");\\n        }\\n\\n        // Verify sync committee signature ZK proof\\n        bytes4 forkVersion = computeForkVersion(computeEpochAtSlot(update.signatureSlot));\\n        bytes32 domain = computeDomain(forkVersion);\\n        bytes32 signingRoot = computeSigningRoot(update.attestedHeader, domain);\\n        require(\\n            currentSyncCommitteePoseidonRoot == update.syncAggregate.poseidonRoot,\\n            \\\"invalid committee poseidon root\\\"\\n        );\\n        require(\\n            ZkVerifier.verifySignatureProof(\\n                signingRoot,\\n                currentSyncCommitteePoseidonRoot,\\n                update.syncAggregate.participation,\\n                update.syncAggregate.proof\\n            ),\\n            \\\"invalid bls sig proof\\\"\\n        );\\n    }\\n\\n    function applyLightClientUpdate(LightClientUpdate memory update) private {\\n        uint64 storePeriod = computeSyncCommitteePeriodAtSlot(finalizedHeader.slot);\\n        uint64 updateFinalizedPeriod = computeSyncCommitteePeriodAtSlot(update.finalizedHeader.slot);\\n        if (nextSyncCommitteeRoot == bytes32(0)) {\\n            require(updateFinalizedPeriod == storePeriod);\\n            nextSyncCommitteeRoot = update.nextSyncCommitteeRoot;\\n            nextSyncCommitteePoseidonRoot = update.nextSyncCommitteePoseidonRoot;\\n            emit SyncCommitteeUpdated(updateFinalizedPeriod + 1, nextSyncCommitteeRoot, nextSyncCommitteePoseidonRoot);\\n        } else if (updateFinalizedPeriod == storePeriod + 1) {\\n            currentSyncCommitteeRoot = nextSyncCommitteeRoot;\\n            currentSyncCommitteePoseidonRoot = nextSyncCommitteePoseidonRoot;\\n            nextSyncCommitteeRoot = update.nextSyncCommitteeRoot;\\n            nextSyncCommitteePoseidonRoot = update.nextSyncCommitteePoseidonRoot;\\n            previousMaxActiveParticipants = currentMaxActiveParticipants;\\n            currentMaxActiveParticipants = 0;\\n            emit SyncCommitteeUpdated(updateFinalizedPeriod + 1, nextSyncCommitteeRoot, nextSyncCommitteePoseidonRoot);\\n        }\\n        if (update.finalizedHeader.slot > finalizedHeader.slot) {\\n            finalizedHeader = update.finalizedHeader;\\n            if (update.finalizedExecutionStateRoot != bytes32(0)) {\\n                finalizedExecutionStateRoot = update.finalizedExecutionStateRoot;\\n                finalizedExecutionStateRootSlot = update.finalizedHeader.slot;\\n            }\\n            if (finalizedHeader.slot > optimisticHeader.slot) {\\n                optimisticHeader = finalizedHeader;\\n                optimisticExecutionStateRoot = finalizedExecutionStateRoot;\\n                optimisticExecutionStateRootSlot = finalizedHeader.slot;\\n            }\\n            emit HeaderUpdated(\\n                update.finalizedHeader.slot,\\n                update.finalizedHeader.stateRoot,\\n                update.finalizedExecutionStateRoot,\\n                true\\n            );\\n        }\\n    }\\n\\n    /*\\n     * https://github.com/ethereum/consensus-specs/blob/dev/specs/altair/light-client/sync-protocol.md#is_better_update\\n     */\\n    function isBetterUpdate(\\n        LightClientUpdate memory newUpdate,\\n        LightClientUpdate memory oldUpdate\\n    ) private pure returns (bool) {\\n        // Old update doesn't exist\\n        if (oldUpdate.syncAggregate.participation == 0) {\\n            return newUpdate.syncAggregate.participation > 0;\\n        }\\n\\n        // Compare supermajority (> 2/3) sync committee participation\\n        bool newHasSupermajority = hasSupermajority(newUpdate.syncAggregate.participation);\\n        bool oldHasSupermajority = hasSupermajority(oldUpdate.syncAggregate.participation);\\n        if (newHasSupermajority != oldHasSupermajority) {\\n            // the new update is a better one if new has supermajority but old doesn't\\n            return newHasSupermajority && !oldHasSupermajority;\\n        }\\n        if (!newHasSupermajority && newUpdate.syncAggregate.participation != oldUpdate.syncAggregate.participation) {\\n            // a better update is the one with higher participation when both new and old doesn't have supermajority\\n            return newUpdate.syncAggregate.participation > oldUpdate.syncAggregate.participation;\\n        }\\n\\n        // Compare presence of relevant sync committee\\n        bool newHasSyncCommittee = hasRelavantSyncCommittee(newUpdate);\\n        bool oldHasSyncCommittee = hasRelavantSyncCommittee(oldUpdate);\\n        if (newHasSyncCommittee != oldHasSyncCommittee) {\\n            return newHasSyncCommittee;\\n        }\\n\\n        // Compare indication of any finality\\n        bool newHasFinality = hasFinalityProof(newUpdate);\\n        bool oldHasFinality = hasFinalityProof(oldUpdate);\\n        if (newHasFinality != oldHasFinality) {\\n            return newHasFinality;\\n        }\\n\\n        // Compare sync committee finality\\n        if (newHasFinality) {\\n            bool newHasCommitteeFinality = computeSyncCommitteePeriodAtSlot(newUpdate.finalizedHeader.slot) ==\\n                computeSyncCommitteePeriodAtSlot(newUpdate.attestedHeader.slot);\\n            bool oldHasCommitteeFinality = computeSyncCommitteePeriodAtSlot(oldUpdate.finalizedHeader.slot) ==\\n                computeSyncCommitteePeriodAtSlot(oldUpdate.attestedHeader.slot);\\n            if (newHasCommitteeFinality != oldHasCommitteeFinality) {\\n                return newHasCommitteeFinality;\\n            }\\n        }\\n\\n        // Tiebreaker 1: Sync committee participation beyond supermajority\\n        if (newUpdate.syncAggregate.participation != oldUpdate.syncAggregate.participation) {\\n            return newUpdate.syncAggregate.participation > oldUpdate.syncAggregate.participation;\\n        }\\n\\n        // Tiebreaker 2: Prefer older data (fewer changes to best)\\n        if (newUpdate.attestedHeader.slot != oldUpdate.attestedHeader.slot) {\\n            return newUpdate.attestedHeader.slot < oldUpdate.attestedHeader.slot;\\n        }\\n\\n        return newUpdate.signatureSlot < oldUpdate.signatureSlot;\\n    }\\n\\n    function hasRelavantSyncCommittee(LightClientUpdate memory update) private pure returns (bool) {\\n        return\\n            hasNextSyncCommitteeProof(update) &&\\n            computeSyncCommitteePeriodAtSlot(update.attestedHeader.slot) ==\\n            computeSyncCommitteePeriodAtSlot(update.signatureSlot);\\n    }\\n\\n    function hasNextSyncCommitteeProof(LightClientUpdate memory update) private pure returns (bool) {\\n        return update.nextSyncCommitteeBranch.length > 0;\\n    }\\n\\n    function hasFinalityProof(LightClientUpdate memory update) private pure returns (bool) {\\n        return update.finalityBranch.length > 0;\\n    }\\n\\n    function hasExecutionFinalityProof(LightClientUpdate memory update) private pure returns (bool) {\\n        return update.finalizedExecutionStateRootBranch.length > 0;\\n    }\\n\\n    function hasExecutionOptimisticProof(LightClientUpdate memory update) private pure returns (bool) {\\n        return update.optimisticdExecutionStateRootBranch.length > 0;\\n    }\\n\\n    function hasSupermajority(uint64 participation) private pure returns (bool) {\\n        return participation * 3 >= SYNC_COMMITTEE_SIZE * 2;\\n    }\\n\\n    function isEmptyHeader(BeaconBlockHeader memory header) private pure returns (bool) {\\n        return header.stateRoot == bytes32(0);\\n    }\\n\\n    function currentSlot() private view returns (uint64) {\\n        return uint64((block.timestamp - GENESIS_TIME) / SLOT_LENGTH_SECONDS);\\n    }\\n\\n    function getSafetyThreshold() private view returns (uint64) {\\n        return (previousMaxActiveParticipants + currentMaxActiveParticipants) / 2;\\n    }\\n\\n    function computeForkVersion(uint64 epoch) private view returns (bytes4) {\\n        for (uint256 i = forkVersions.length - 1; i >= 0; i--) {\\n            if (epoch >= forkEpochs[i]) {\\n                return forkVersions[i];\\n            }\\n        }\\n        revert(\\\"fork versions not set\\\");\\n    }\\n\\n    function computeSyncCommitteePeriodAtSlot(uint64 slot) private pure returns (uint64) {\\n        return computeSyncCommitteePeriod(computeEpochAtSlot(slot));\\n    }\\n\\n    function computeEpochAtSlot(uint64 slot) private pure returns (uint64) {\\n        return slot / SLOTS_PER_EPOCH;\\n    }\\n\\n    function computeSyncCommitteePeriod(uint64 epoch) private pure returns (uint64) {\\n        return epoch / EPOCHS_PER_SYNC_COMMITTEE_PERIOD;\\n    }\\n\\n    /**\\n     * https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#compute_domain\\n     */\\n    function computeDomain(bytes4 forkVersion) internal view returns (bytes32) {\\n        return DOMAIN_SYNC_COMMITTEE | (sha256(abi.encode(forkVersion, GENESIS_VALIDATOR_ROOT)) >> 32);\\n    }\\n\\n    // computeDomain(forkVersion, genesisValidatorsRoot)\\n    function computeSigningRoot(BeaconBlockHeader memory header, bytes32 domain) internal pure returns (bytes32) {\\n        return sha256(bytes.concat(SSZ.hashTreeRoot(header), domain));\\n    }\\n}\\n\",\"keccak256\":\"0x2862ac9dfe38f9673b01d0f3ad55ccbc0a4d7f715ab772ddd50aa96a14d131d2\",\"license\":\"Unlicensed\"},\"contracts/light-client/LightClientStore.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicensed\\npragma solidity 0.8.18;\\n\\nimport \\\"./Types.sol\\\";\\n\\nabstract contract LightClientStore {\\n    // beacon chain genesis information\\n    uint256 immutable GENESIS_TIME;\\n    bytes32 immutable GENESIS_VALIDATOR_ROOT;\\n\\n    // light client store\\n    BeaconBlockHeader public finalizedHeader;\\n    bytes32 public finalizedExecutionStateRoot;\\n    uint64 public finalizedExecutionStateRootSlot;\\n\\n    BeaconBlockHeader public optimisticHeader;\\n    bytes32 public optimisticExecutionStateRoot;\\n    uint64 public optimisticExecutionStateRootSlot;\\n\\n    bytes32 public currentSyncCommitteeRoot;\\n    bytes32 public currentSyncCommitteePoseidonRoot;\\n    bytes32 public nextSyncCommitteeRoot;\\n    bytes32 public nextSyncCommitteePoseidonRoot;\\n\\n    LightClientUpdate public bestValidUpdate;\\n    uint64 public previousMaxActiveParticipants;\\n    uint64 public currentMaxActiveParticipants;\\n\\n    // fork versions\\n    uint64[] public forkEpochs;\\n    bytes4[] public forkVersions;\\n\\n    constructor(\\n        uint256 genesisTime,\\n        bytes32 genesisValidatorsRoot,\\n        uint64[] memory _forkEpochs,\\n        bytes4[] memory _forkVersions,\\n        BeaconBlockHeader memory _finalizedHeader,\\n        bytes32 syncCommitteeRoot,\\n        bytes32 syncCommitteePoseidonRoot\\n    ) {\\n        GENESIS_TIME = genesisTime;\\n        GENESIS_VALIDATOR_ROOT = genesisValidatorsRoot;\\n        forkEpochs = _forkEpochs;\\n        forkVersions = _forkVersions;\\n        finalizedHeader = _finalizedHeader;\\n        optimisticHeader = _finalizedHeader;\\n        currentSyncCommitteeRoot = syncCommitteeRoot;\\n        currentSyncCommitteePoseidonRoot = syncCommitteePoseidonRoot;\\n    }\\n}\\n\",\"keccak256\":\"0xb9c0a0123b0005f0806e2a69be4d682ad4c22766263f3d625bd0408e7587b3c7\",\"license\":\"Unlicensed\"},\"contracts/light-client/SSZ.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicensed\\npragma solidity 0.8.18;\\n\\nimport \\\"./Types.sol\\\";\\n\\nlibrary SSZ {\\n    function isValidMerkleBranch(\\n        bytes32 leaf,\\n        bytes32[] memory branch,\\n        uint256 index,\\n        bytes32 root\\n    ) internal pure returns (bool) {\\n        bytes32 restoredMerkleRoot = restoreMerkleRoot(leaf, branch, index);\\n        return root == restoredMerkleRoot;\\n    }\\n\\n    function restoreMerkleRoot(bytes32 leaf, bytes32[] memory branch, uint256 index) internal pure returns (bytes32) {\\n        bytes32 value = leaf;\\n        for (uint256 i = 0; i < branch.length; i++) {\\n            if ((index / (2 ** i)) % 2 == 1) {\\n                value = sha256(bytes.concat(branch[i], value));\\n            } else {\\n                value = sha256(bytes.concat(value, branch[i]));\\n            }\\n        }\\n        return value;\\n    }\\n\\n    function hashTreeRoot(BeaconBlockHeader memory header) internal pure returns (bytes32) {\\n        bytes32 left = sha256(\\n            bytes.concat(\\n                sha256(bytes.concat(toLittleEndian(header.slot), toLittleEndian(header.proposerIndex))),\\n                sha256(bytes.concat(header.parentRoot, header.stateRoot))\\n            )\\n        );\\n        bytes32 right = sha256(\\n            bytes.concat(\\n                sha256(bytes.concat(header.bodyRoot, bytes32(0))),\\n                sha256(bytes.concat(bytes32(0), bytes32(0)))\\n            )\\n        );\\n        return sha256(bytes.concat(left, right));\\n    }\\n\\n    function toLittleEndian(uint256 x) internal pure returns (bytes32) {\\n        bytes32 res;\\n        for (uint256 i = 0; i < 32; i++) {\\n            res = (res << 8) | bytes32(x & 0xff);\\n            x >>= 8;\\n        }\\n        return res;\\n    }\\n}\\n\",\"keccak256\":\"0xabd3811f2c3a25020cb2b40a894bdab66c982a017c144427002a1a988682918b\",\"license\":\"Unlicensed\"},\"contracts/light-client/Types.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicensed\\npragma solidity 0.8.18;\\n\\nstruct BeaconBlockHeader {\\n    uint64 slot;\\n    uint64 proposerIndex;\\n    bytes32 parentRoot;\\n    bytes32 stateRoot;\\n    bytes32 bodyRoot;\\n}\\n\\nfunction emptyBeaconBlockHeader() pure returns (BeaconBlockHeader memory) {\\n    return\\n        BeaconBlockHeader({\\n            slot: 0,\\n            proposerIndex: 0,\\n            parentRoot: bytes32(0),\\n            stateRoot: bytes32(0),\\n            bodyRoot: bytes32(0)\\n        });\\n}\\n\\n// subset of LightClientUpdate\\nstruct LightClientFinalityUpdate {\\n    BeaconBlockHeader attestedHeader;\\n    BeaconBlockHeader finalizedHeader;\\n    bytes32[] finalityBranch;\\n    bytes32 finalizedExecutionStateRoot;\\n    bytes32[] finalizedExecutionStateRootBranch;\\n    SyncAggregate syncAggregate;\\n    uint64 signatureSlot;\\n}\\n\\n// subset of LightClientUpdate\\nstruct LightClientOptimisticUpdate {\\n    BeaconBlockHeader attestedHeader;\\n    bytes32 optimisticExecutionStateRoot;\\n    bytes32[] optimisticdExecutionStateRootBranch;\\n    SyncAggregate syncAggregate;\\n    uint64 signatureSlot;\\n}\\n\\n// subset of LightClientUpdate\\nstruct SyncCommitteeUpdate {\\n    BeaconBlockHeader attestedHeader;\\n    BeaconBlockHeader finalizedHeader;\\n    bytes32[] finalityBranch;\\n    bytes32 nextSyncCommitteeRoot;\\n    bytes32[] nextSyncCommitteeBranch;\\n    bytes32 nextSyncCommitteePoseidonRoot;\\n    Proof nextSyncCommitteeRootMappingProof;\\n    SyncAggregate syncAggregate;\\n    uint64 signatureSlot;\\n}\\n\\nstruct LightClientUpdate {\\n    // Header attested to by the sync committee\\n    BeaconBlockHeader attestedHeader;\\n    // Finalized header corresponding to `attested_header.state_root`\\n    BeaconBlockHeader finalizedHeader;\\n    bytes32[] finalityBranch;\\n    bytes32 finalizedExecutionStateRoot;\\n    bytes32[] finalizedExecutionStateRootBranch;\\n    bytes32 optimisticExecutionStateRoot;\\n    bytes32[] optimisticdExecutionStateRootBranch;\\n    bytes32 nextSyncCommitteeRoot;\\n    bytes32[] nextSyncCommitteeBranch;\\n    bytes32 nextSyncCommitteePoseidonRoot;\\n    Proof nextSyncCommitteeRootMappingProof;\\n    // Sync committee aggregate signature participation & zk proof\\n    SyncAggregate syncAggregate;\\n    // Slot at which the aggregate signature was created (untrusted)\\n    uint64 signatureSlot;\\n}\\n\\nstruct SyncAggregate {\\n    uint64 participation;\\n    bytes32 poseidonRoot;\\n    Proof proof;\\n}\\n\\nstruct Proof {\\n    bytes32 placeholder;\\n}\\n\\nfunction emptyProof() pure returns (Proof memory) {\\n    return Proof({placeholder: bytes32(0)});\\n}\\n\",\"keccak256\":\"0x7ae59128b8ab5776c353b35d69ffd91b0117d67b54e2d6b789cc2ccb5cf4279a\",\"license\":\"Unlicensed\"},\"contracts/light-client/ZkVerifier.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicensed\\npragma solidity 0.8.18;\\n\\nimport \\\"./Types.sol\\\";\\n\\nlibrary ZkVerifier {\\n    function verifySignatureProof(\\n        bytes32 signingRoot,\\n        bytes32 syncCommitteePoseidonRoot,\\n        uint256 participation,\\n        Proof memory proof\\n    ) internal pure returns (bool) {\\n        // TODO\\n        return true;\\n    }\\n\\n    function verifySyncCommitteeRootMappingProof(\\n        bytes32 sszRoot,\\n        bytes32 poseidonRoot,\\n        Proof memory proof\\n    ) internal pure returns (bool) {\\n        // TODO\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0xacc9014d6981562606182c00cceb3b8370c11685a4f476d03b870d0edba6b5ea\",\"license\":\"Unlicensed\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b5060405162003d2238038062003d2283398101604081905262000034916200047d565b608087905260a086905284518790879087908790879087908790620000619060269060208801906200016e565b508351620000779060279060208701906200022d565b5082516000805460208601516001600160401b0390811668010000000000000000026001600160801b031992831691909416908117841790925560408601516001819055606087015160028190556080909701516003819055600680549093169093179093179055600791909155600893909355600992909255600c55600d55506200010f9250620001099150503390565b6200011c565b505050505050506200058c565b602880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054828255906000526020600020906003016004900481019282156200021b5791602002820160005b83821115620001e457835183826101000a8154816001600160401b0302191690836001600160401b03160217905550926020019260080160208160070104928301926001030262000198565b8015620002195782816101000a8154906001600160401b030219169055600801602081600701049283019260010302620001e4565b505b5062000229929150620002cc565b5090565b828054828255906000526020600020906007016008900481019282156200021b5791602002820160005b838211156200029a57835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030262000257565b8015620002195782816101000a81549063ffffffff02191690556004016020816003010492830192600103026200029a565b5b80821115620002295760008155600101620002cd565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620003245762000324620002e3565b604052919050565b60006001600160401b03821115620003485762000348620002e3565b5060051b60200190565b80516001600160401b03811681146200036a57600080fd5b919050565b600082601f8301126200038157600080fd5b815160206200039a62000394836200032c565b620002f9565b82815260059290921b84018101918181019086841115620003ba57600080fd5b8286015b84811015620003ef5780516001600160e01b031981168114620003e15760008081fd5b8352918301918301620003be565b509695505050505050565b600060a082840312156200040d57600080fd5b60405160a081016001600160401b0381118282101715620004325762000432620002e3565b604052905080620004438362000352565b8152620004536020840162000352565b60208201526040830151604082015260608301516060820152608083015160808201525092915050565b6000806000806000806000610160888a0312156200049a57600080fd5b87516020808a015160408b01519299509750906001600160401b0380821115620004c357600080fd5b818b0191508b601f830112620004d857600080fd5b8151620004e962000394826200032c565b81815260059190911b8301840190848101908e8311156200050957600080fd5b938501935b828510156200053257620005228562000352565b825293850193908501906200050e565b60608e0151909a5094505050808311156200054c57600080fd5b50506200055c8a828b016200036f565b9450506200056e8960808a01620003fa565b92506101208801519150610140880151905092959891949750929550565b60805160a051613770620005b2600039600061292b0152600061249b01526137706000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c8063a1a9ad55116100f9578063c766696311610097578063d76c897e11610071578063d76c897e146104ba578063e153d799146104e5578063e1861b0814610513578063f2fde38b1461051c57600080fd5b8063c76669631461047a578063cbf496c01461048d578063d3aee351146104a057600080fd5b8063ba67ee48116100d3578063ba67ee481461034b578063baa94ea214610432578063bcbaf7701461045e578063c51904361461047157600080fd5b8063a1a9ad5514610327578063a4059e071461032f578063ab556e9f1461033857600080fd5b80635dcaabb711610166578063715018a611610140578063715018a6146102935780638da5cb5b1461029b5780639863282d146102b65780639b35035a1461031457600080fd5b80635dcaabb71461026e57806365e700de1461028157806367b49cc71461028a57600080fd5b806339536c8f1161019757806339536c8f14610230578063408801941461024757806343a6c5a61461025a57600080fd5b8063104202ae146101be57806312420766146101ee578063217742a71461021b575b600080fd5b6005546101d1906001600160401b031681565b6040516001600160401b0390911681526020015b60405180910390f35b6004546005546001600160401b03165b604080519283526001600160401b039091166020830152016101e5565b61022e610229366004612f48565b61052f565b005b610239600a5481565b6040519081526020016101e5565b600b546101d1906001600160401b031681565b600a54600b546001600160401b03166101fe565b61022e61027c3660046130b2565b610c1a565b610239600d5481565b610239600e5481565b61022e610d13565b6028546040516001600160a01b0390911681526020016101e5565b6000546001546002546003546102e1936001600160401b0380821694600160401b9092041692909185565b604080516001600160401b039687168152959094166020860152928401919091526060830152608082015260a0016101e5565b61022e61032236600461315f565b610d7e565b61022e610e2a565b610239600c5481565b61022e610346366004613265565b611303565b6040805160a080820183526010546001600160401b038082168452600160401b9182900481166020808601919091526011548587015260125460608087019190915260135460808088019190915287519586018852601454808516875294909404831685830152601554858801526016548582015260175493850193909352601954601b54601d54601f5489518086018b52855481528a519788018b5260215487168852602254888701528a519586018b5260235486529987019490945260245461041d999396929591949392911689565b6040516101e5999897969594939291906132a9565b610445610440366004613391565b6114c4565b6040516001600160e01b031990911681526020016101e5565b6101d161046c366004613391565b6114fb565b61023960045481565b6025546101d1906001600160401b031681565b61022e61049b3660046133aa565b611538565b6025546101d190600160401b90046001600160401b031681565b6006546007546008546009546102e1936001600160401b0380821694600160401b9092041692909185565b600054600c54600e54604080516001600160401b0390941684526020840192909252908201526060016101e5565b610239600f5481565b61022e61052a366004613491565b611627565b61053881611709565b6040805161024081018252601080546001600160401b038082166101a08501908152600160401b9283900482166101c08601526011546101e08601526012546102008601526013546102208601528452845160a081018652601454808316825292909204166020828101919091526015548286015260165460608301526017546080830152808401919091526018805485518184028101840187528181526107b896889695949086019391929083018282801561061457602002820191906000526020600020905b815481526020019060010190808311610600575b5050505050815260200160098201548152602001600a820180548060200260200160405190810160405280929190818152602001828054801561067657602002820191906000526020600020905b815481526020019060010190808311610662575b50505050508152602001600b8201548152602001600c82018054806020026020016040519081016040528092919081815260200182805480156106d857602002820191906000526020600020905b8154815260200190600101908083116106c4575b50505050508152602001600d8201548152602001600e820180548060200260200160405190810160405280929190818152602001828054801561073a57602002820191906000526020600020905b815481526020019060010190808311610726575b5050509183525050600f820154602080830191909152604080518083018252601085015481528184015280516060818101835260118601546001600160401b03908116835260128701548386015283519485018452601387015485529282019390935291830191909152601490920154909116608090910152611e2c565b1561093f5780518051601080546020808501516001600160401b039485166001600160801b031993841617600160401b91861682021784556040808701516011556060808801516012556080978801516013558389015180516014805483880151928b169816979097179816909302969096179093558083015160155593840151601655929093015160175591830151805184939261085c92601892910190612c6d565b50606082015160098201556080820151805161088291600a840191602090910190612c6d565b5060a0820151600b82015560c082015180516108a891600c840191602090910190612c6d565b5060e0820151600d82015561010082015180516108cf91600e840191602090910190612c6d565b50610120820151600f82015561014082015151601082015561016082015180516011830180546001600160401b0392831667ffffffffffffffff19918216179091556020830151601285015560409092015151601384015561018090930151601490920180549290931691161790555b602554610160820151516001600160401b03600160401b90920482169116111561099b5761016081015151602580546001600160401b03909216600160401b026fffffffffffffffff0000000000000000199092169190911790555b6109a36120ac565b6001600160401b0316816101600151600001516001600160401b03161180156109dc57506006548151516001600160401b039182169116115b15610a9757805180516006805460208401516001600160401b03908116600160401b026001600160801b0319909216908416171790556040808301516007556060830151600881905560809093015160095560a0840151600a81905590517f8eba85cf1bad9a86550001d8f2f6d6f2d892aff5ef507b89e03f785e066f93a893610a8e939290916000906001600160401b03949094168452602084019290925260408301521515606082015260800190565b60405180910390a15b6000610aa882610100015151151590565b8015610ab8575060408201515115155b8015610af05750815151610acb906120e0565b6001600160401b0316610ae58360200151600001516120e0565b6001600160401b0316145b8015610afc5750600e54155b9050610b10826101600151600001516120f3565b8015610b3657506000546020830151516001600160401b0391821691161180610b365750805b15610c1657610b448261211e565b601080546001600160801b03199081168255600060118190556012819055601381905560148054909216909155601581905560168190556017819055610b8b601882612cb8565b6009820160009055600a82016000610ba39190612cb8565b600b820160009055600c82016000610bbb9190612cb8565b600d820160009055600e82016000610bd39190612cb8565b506000600f82018190556010820181905560118201805467ffffffffffffffff199081169091556012830182905560138301919091556014909101805490911690555b5050565b604080516101a08101825282518152815160a08082018452600080835260208084018290528386018290526060808501839052608094850183905286518085018852838152808301849052808801849052808201849052808601849052828701528651838152808301885286880152808601839052865183815280830188528587015281880151938601939093528686015160c086015260e08501829052855182815280820187526101008601526101208501829052855180820187528290528551908101909552845261014083019390935291830151610160820152908201516001600160401b0316610180820152610c168161052f565b6028546001600160a01b03163314610d725760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b610d7c6000612428565b565b604080516101a0810182528251815260208084015181830152838301518284015260006060830181905283518181529182019093526080820190815260006020808301829052604080518381529182018152909201919050815260200183606001518152602001836080015181526020018360a0015181526020018360c0015181526020018360e0015181526020018361010001516001600160401b03168152509050610c168161052f565b6028546001600160a01b03163314610e845760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610d69565b600054610e9e9062015180906001600160401b03166134d0565b610ea6612492565b6001600160401b031611610efc5760405162461bcd60e51b815260206004820152601260248201527f74696d656f7574206e6f742070617373656400000000000000000000000000006044820152606401610d69565b6010546001600160401b0316610f545760405162461bcd60e51b815260206004820152601460248201527f6e6f20626573742076616c6964207570646174650000000000000000000000006044820152606401610d69565b6000546014546001600160401b03918216911611610fb45760105460148054600160401b8084046001600160401b039081169091026001600160801b03199092169316929092179190911790556011546015556012546016556013546017555b6040805161024081018252601080546001600160401b038082166101a08501908152600160401b9283900482166101c08601526011546101e08601526012546102008601526013546102208601528452845160a08101865260145480831682529290920416602082810191909152601554828601526016546060830152601754608083015280840191909152601880548551818402810184018752818152611230968601939092919083018282801561108c57602002820191906000526020600020905b815481526020019060010190808311611078575b5050505050815260200160098201548152602001600a82018054806020026020016040519081016040528092919081815260200182805480156110ee57602002820191906000526020600020905b8154815260200190600101908083116110da575b50505050508152602001600b8201548152602001600c820180548060200260200160405190810160405280929190818152602001828054801561115057602002820191906000526020600020905b81548152602001906001019080831161113c575b50505050508152602001600d8201548152602001600e82018054806020026020016040519081016040528092919081815260200182805480156111b257602002820191906000526020600020905b81548152602001906001019080831161119e575b5050509183525050600f820154602080830191909152604080518083018252601085015481528184015280516060818101835260118601546001600160401b0390811683526012870154838601528351948501845260138701548552928201939093529183019190915260149092015490911660809091015261211e565b601080546001600160801b03199081168255600060118190556012819055601381905560148054909216909155601581905560168190556017819055611277601882612cb8565b6009820160009055600a8201600061128f9190612cb8565b600b820160009055600c820160006112a79190612cb8565b600d820160009055600e820160006112bf9190612cb8565b506000600f82018190556010820181905560118201805467ffffffffffffffff19908116909155601283018290556013830191909155601490910180549091169055565b6028546001600160a01b0316331461135d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610d69565b6001600160e01b031981166113b45760405162461bcd60e51b815260206004820152601460248201527f696e76616c696420666f726b2076657273696f6e0000000000000000000000006044820152606401610d69565b60268054600181810190925560048082047f744a2cf8fd7008e3d53b67916e73460df9fa5214e3ef23dd4259ca09493a35940180546001600160401b0380881660086003909616860261010090810a9182029290910219909216179091556027805494850181556000529183047f98a476f1687bc3d60a2da2adbcba2c46958e61fa2fb4042cd7bc5816a710195b01805460e086901c600790951690920290920a92830263ffffffff90930219169190911790556040517f3d992c45d9456d8ebe181b6a66a3721421393afaa297791373e7569c1abcc8af906114b890849084906001600160401b039290921682526001600160e01b031916602082015260400190565b60405180910390a15050565b602781815481106114d457600080fd5b9060005260206000209060089182820401919006600402915054906101000a900460e01b81565b6026818154811061150b57600080fd5b9060005260206000209060049182820401919006600802915054906101000a90046001600160401b031681565b6000604051806101a0016040528083600001518152602001836020015181526020018360400151815260200183606001518152602001836080015181526020016000801b815260200160006001600160401b0381111561159a5761159a612ce7565b6040519080825280602002602001820160405280156115c3578160200160208202803683370190505b5081526000602080830182905260408051838152808301825281850152606084018390528051808301825283905280519182019052908152608082015260a0848101519082015260c0808501516001600160401b03169101529050610c168161052f565b6028546001600160a01b031633146116815760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610d69565b6001600160a01b0381166116fd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610d69565b61170681612428565b50565b6001816101600151600001516001600160401b0316116117765760405162461bcd60e51b815260206004820152602260248201527f6e6f7420656e6f75676820636f6d6d697474656520706172746963697061746960448201526137b760f11b6064820152608401610d69565b8051516001600160401b031661178a612492565b6001600160401b03161180156117b357506020810151518151516001600160401b039182169116115b6117ff5760405162461bcd60e51b815260206004820152600c60248201527f696e76616c696420736c6f7400000000000000000000000000000000000000006044820152606401610d69565b60008054611815906001600160401b03166120e0565b9050600061182a8360200151600001516120e0565b9050816001600160401b0316816001600160401b0316148061186757506118528260016134e3565b6001600160401b0316816001600160401b0316145b61187057600080fd5b82515160009061187f906120e0565b600e5490915060009015801561189a57506101008501515115155b80156118b75750836001600160401b0316826001600160401b0316145b6000548651519192506001600160401b03908116911611806118d65750805b6118df57600080fd5b604085015151611944576020850151606001511561193f5760405162461bcd60e51b815260206004820152601160248201527f6e6f2066696e616c6974792070726f6f660000000000000000000000000000006044820152606401610d69565b611a26565b6020850151516001600160401b03166000036119b0576020850151606001511561193f5760405162461bcd60e51b815260206004820152601e60248201527f67656e65736973206865616465722073686f756c6420626520656d70747900006044820152606401610d69565b60006119d56119c287602001516124ca565b6040880151885160600151606990612840565b905080611a245760405162461bcd60e51b815260206004820152601660248201527f696e76616c69642066696e616c6974792070726f6f66000000000000000000006044820152606401610d69565b505b608085015151611a8757606085015115611a825760405162461bcd60e51b815260206004820152601b60248201527f6e6f20657865637574696f6e2066696e616c6974792070726f6f6600000000006044820152606401610d69565b611b4a565b604085015151611ad95760405162461bcd60e51b815260206004820152601b60248201527f6e6f20657865637574696f6e2066696e616c6974792070726f6f6600000000006044820152606401610d69565b6000611af986606001518760800151610382896020015160600151612840565b905080611b485760405162461bcd60e51b815260206004820181905260248201527f696e76616c696420657865637574696f6e2066696e616c6974792070726f6f666044820152606401610d69565b505b60c085015151611bab5760a085015115611ba65760405162461bcd60e51b815260206004820152601d60248201527f6e6f20657865637574696f6e206f7074696d69737469632070726f6f660000006044820152606401610d69565b611c27565b6000611bcb8660a001518760c00151610382896000015160600151612840565b905080611c255760405162461bcd60e51b815260206004820152602260248201527f696e76616c696420657865637574696f6e206f7074696d69737469632070726f60448201526137b360f11b6064820152608401610d69565b505b61010085015151611c985760e0850151158015611c475750610120850151155b611c935760405162461bcd60e51b815260206004820152601c60248201527f6e6f206e6578742073796e6320636f6d6d69747465652070726f6f66000000006044820152606401610d69565b611d8f565b836001600160401b0316826001600160401b0316148015611cba5750600e5415155b15611d1457600e548560e0015114611d145760405162461bcd60e51b815260206004820152601b60248201527f696e76616c6964206e6578742073796e6320636f6d6d697474656500000000006044820152606401610d69565b6000611d348660e001518761010001516037896000015160600151612840565b905080611d8d5760405162461bcd60e51b815260206004820152602160248201527f696e76616c6964206e6578742073796e6320636f6d6d69747465652070726f6f6044820152603360f91b6064820152608401610d69565b505b6000611da7611da287610180015161285a565b612867565b90506000611db482612922565b90506000611dc68860000151836129d8565b905087610160015160200151600d5414611e225760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420636f6d6d697474656520706f736569646f6e20726f6f74006044820152606401610d69565b5050505050505050565b610160810151516000906001600160401b03168103611e5d5750610160820151516001600160401b031615156120a6565b6000611e71846101600151600001516120f3565b90506000611e87846101600151600001516120f3565b905080151582151514611ea857818015611e9f575080155b925050506120a6565b81158015611ece5750610160808501515190860151516001600160401b03908116911614155b15611ef657505050610160808201515190830151516001600160401b039182169116116120a6565b6000611f0186612a5a565b90506000611f0e86612a5a565b905080151582151514611f26575092506120a6915050565b6000611f36886040015151151590565b90506000611f48886040015151151590565b905080151582151514611f62575094506120a69350505050565b8115611ff157885151600090611f77906120e0565b6001600160401b0316611f918b60200151600001516120e0565b6001600160401b03161490506000611fb08a60000151600001516120e0565b6001600160401b0316611fca8b60200151600001516120e0565b6001600160401b03161490508115158114611fee575096506120a695505050505050565b50505b6101608089015151908a0151516001600160401b0390811691161461204457876101600151600001516001600160401b0316896101600151600001516001600160401b03161196505050505050506120a6565b8751518951516001600160401b0390811691161461207e5750508551518751516001600160401b0391821691161094506120a69350505050565b8761018001516001600160401b03168961018001516001600160401b03161096505050505050505b92915050565b6025546000906002906120d1906001600160401b03600160401b8204811691166134e3565b6120db9190613519565b905090565b60006120a66120ee8361285a565b612aaa565b6000612102610200600261353f565b61210d836003613556565b6001600160401b0316101592915050565b60008054612134906001600160401b03166120e0565b905060006121498360200151600001516120e0565b600e549091506121e157816001600160401b0316816001600160401b03161461217157600080fd5b60e0830151600e55610120830151600f557fdc7ba15c782b181b9d54a996db4ab8a32182bff2bfb09e4aca8ed9ea9e5380c76121ae8260016134e3565b600e54600f54604080516001600160401b03909416845260208401929092529082015260600160405180910390a16122a0565b6121ec8260016134e3565b6001600160401b0316816001600160401b0316036122a057600e8054600c55600f8054600d5560e0850151909155610120840151905560258054600160401b81046001600160401b03166001600160801b03199091161790557fdc7ba15c782b181b9d54a996db4ab8a32182bff2bfb09e4aca8ed9ea9e5380c76122718260016134e3565b600e54600f54604080516001600160401b03909416845260208401929092529082015260600160405180910390a15b6000546020840151516001600160401b039182169116111561242357602080840151805160008054938301516001600160401b03908116600160401b026001600160801b0319909516921691909117929092179091556040810151600155606080820151600255608090910151600355830151156123475760608301516004556020830151516005805467ffffffffffffffff19166001600160401b039092169190911790555b6006546000546001600160401b03918216911611156123be5760005460068054600160401b8084046001600160401b039081169091026001600160801b03199092169316928317179055600154600755600254600855600354600955600454600a55600b805467ffffffffffffffff191690911790555b602083810151805160609182015182870151604080516001600160401b03909416845294830191909152928101929092526001908201527f8eba85cf1bad9a86550001d8f2f6d6f2d892aff5ef507b89e03f785e066f93a89060800160405180910390a15b505050565b602880546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000600c6124c07f000000000000000000000000000000000000000000000000000000000000000042613581565b6120db9190613594565b6000806002806124e685600001516001600160401b0316612ab8565b6124fc86602001516001600160401b0316612ab8565b60408051602081019390935282015260600160408051601f1981840301815290829052612528916135a8565b602060405180830381855afa158015612545573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061256891906135d7565b60028560400151866060015160405160200161258e929190918252602082015260400190565b60408051601f19818403018152908290526125a8916135a8565b602060405180830381855afa1580156125c5573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906125e891906135d7565b60408051602081019390935282015260600160408051601f1981840301815290829052612614916135a8565b602060405180830381855afa158015612631573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061265491906135d7565b9050600060028085608001516000801b60405160200161267e929190918252602082015260400190565b60408051601f1981840301815290829052612698916135a8565b602060405180830381855afa1580156126b5573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906126d891906135d7565b6040516002906126f8906000908190602001918252602082015260400190565b60408051601f1981840301815290829052612712916135a8565b602060405180830381855afa15801561272f573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061275291906135d7565b60408051602081019390935282015260600160408051601f198184030181529082905261277e916135a8565b602060405180830381855afa15801561279b573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906127be91906135d7565b9050600282826040516020016127de929190918252602082015260400190565b60408051601f19818403018152908290526127f8916135a8565b602060405180830381855afa158015612815573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061283891906135d7565b949350505050565b60008061284e868686612af1565b90921495945050505050565b60006120a6602083613519565b602754600090819061287b90600190613581565b90505b60268181548110612891576128916135f0565b90600052602060002090600491828204019190066008029054906101000a90046001600160401b03166001600160401b0316836001600160401b03161061291057602781815481106128e5576128e56135f0565b90600052602060002090600891828204019190066004029054906101000a900460e01b915050919050565b8061291a81613606565b91505061287e565b600060206002837f00000000000000000000000000000000000000000000000000000000000000006040516020016129709291906001600160e01b0319929092168252602082015260400190565b60408051601f198184030181529082905261298a916135a8565b602060405180830381855afa1580156129a7573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906129ca91906135d7565b6307000000911c1792915050565b600060026129e5846124ca565b604080516020810192909252810184905260600160408051601f1981840301815290829052612a13916135a8565b602060405180830381855afa158015612a30573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190612a5391906135d7565b9392505050565b6000612a6b82610100015151151590565b80156120a65750612a808261018001516120e0565b6001600160401b0316612a9a8360000151600001516120e0565b6001600160401b03161492915050565b60006120a661010083613519565b60008060005b6020811015612aea57600884811c9460ff1692901b919091179080612ae28161361d565b915050612abe565b5092915050565b600083815b8451811015612c64576002612b0b828261371a565b612b159086613594565b612b1f9190613726565b600103612bbe576002858281518110612b3a57612b3a6135f0565b602002602001015183604051602001612b5d929190918252602082015260400190565b60408051601f1981840301815290829052612b77916135a8565b602060405180830381855afa158015612b94573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190612bb791906135d7565b9150612c52565b600282868381518110612bd357612bd36135f0565b6020026020010151604051602001612bf5929190918252602082015260400190565b60408051601f1981840301815290829052612c0f916135a8565b602060405180830381855afa158015612c2c573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190612c4f91906135d7565b91505b80612c5c8161361d565b915050612af6565b50949350505050565b828054828255906000526020600020908101928215612ca8579160200282015b82811115612ca8578251825591602001919060010190612c8d565b50612cb4929150612cd2565b5090565b508054600082559060005260206000209081019061170691905b5b80821115612cb45760008155600101612cd3565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b0381118282101715612d1f57612d1f612ce7565b60405290565b6040516101a081016001600160401b0381118282101715612d1f57612d1f612ce7565b60405161012081016001600160401b0381118282101715612d1f57612d1f612ce7565b60405160e081016001600160401b0381118282101715612d1f57612d1f612ce7565b80356001600160401b0381168114612da457600080fd5b919050565b600060a08284031215612dbb57600080fd5b612dc3612cfd565b9050612dce82612d8d565b8152612ddc60208301612d8d565b602082015260408201356040820152606082013560608201526080820135608082015292915050565b600082601f830112612e1657600080fd5b813560206001600160401b0380831115612e3257612e32612ce7565b8260051b604051601f19603f83011681018181108482111715612e5757612e57612ce7565b604052938452858101830193838101925087851115612e7557600080fd5b83870191505b84821015612e9457813583529183019190830190612e7b565b979650505050505050565b600060208284031215612eb157600080fd5b604051602081018181106001600160401b0382111715612ed357612ed3612ce7565b6040529135825250919050565b600060608284031215612ef257600080fd5b604051606081018181106001600160401b0382111715612f1457612f14612ce7565b604052905080612f2383612d8d565b815260208301356020820152612f3c8460408501612e9f565b60408201525092915050565b600060208284031215612f5a57600080fd5b81356001600160401b0380821115612f7157600080fd5b908301906102e08286031215612f8657600080fd5b612f8e612d25565b612f988684612da9565b8152612fa78660a08501612da9565b60208201526101408084013583811115612fc057600080fd5b612fcc88828701612e05565b6040840152506101608085013560608401526101808086013585811115612ff257600080fd5b612ffe8a828901612e05565b6080860152506101a086013560a08501526101c08601358581111561302257600080fd5b61302e8a828901612e05565b60c0860152506101e086013560e08501526102008601358581111561305257600080fd5b61305e8a828901612e05565b6101008601525061022086013561012085015261307f896102408801612e9f565b83850152613091896102608801612ee0565b828501526130a26102c08701612d8d565b9084015250909695505050505050565b6000602082840312156130c457600080fd5b81356001600160401b03808211156130db57600080fd5b9083019061016082860312156130f057600080fd5b6130f8612cfd565b6131028684612da9565b815260a0830135602082015260c08301358281111561312057600080fd5b61312c87828601612e05565b60408301525061313f8660e08501612ee0565b60608201526131516101408401612d8d565b608082015295945050505050565b60006020828403121561317157600080fd5b81356001600160401b038082111561318857600080fd5b90830190610260828603121561319d57600080fd5b6131a5612d48565b6131af8684612da9565b81526131be8660a08501612da9565b6020820152610140830135828111156131d657600080fd5b6131e287828601612e05565b60408301525061016083013560608201526101808301358281111561320657600080fd5b61321287828601612e05565b6080830152506101a083013560a0820152613231866101c08501612e9f565b60c0820152613244866101e08501612ee0565b60e08201526132566102408401612d8d565b61010082015295945050505050565b6000806040838503121561327857600080fd5b61328183612d8d565b915060208301356001600160e01b03198116811461329e57600080fd5b809150509250929050565b61026081016132f0828c6001600160401b03808251168352806020830151166020840152506040810151604083015260608101516060830152608081015160808301525050565b89516001600160401b0390811660a084015260208b01511660c083015260408a015160e083015260608a015161010083015260808a01516101208301526101408201989098526101608101969096526101808601949094526101a0850192909252516101c084015280516001600160401b039081166101e0850152602082015161020085015260409091015151610220840152166102409091015292915050565b6000602082840312156133a357600080fd5b5035919050565b6000602082840312156133bc57600080fd5b81356001600160401b03808211156133d357600080fd5b9083019061022082860312156133e857600080fd5b6133f0612d6b565b6133fa8684612da9565b81526134098660a08501612da9565b60208201526101408301358281111561342157600080fd5b61342d87828601612e05565b60408301525061016083013560608201526101808301358281111561345157600080fd5b61345d87828601612e05565b608083015250613471866101a08501612ee0565b60a08201526134836102008401612d8d565b60c082015295945050505050565b6000602082840312156134a357600080fd5b81356001600160a01b0381168114612a5357600080fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156120a6576120a66134ba565b6001600160401b03818116838216019080821115612aea57612aea6134ba565b634e487b7160e01b600052601260045260246000fd5b60006001600160401b038084168061353357613533613503565b92169190910492915050565b80820281158282048414176120a6576120a66134ba565b6001600160401b03818116838216028082169190828114613579576135796134ba565b505092915050565b818103818111156120a6576120a66134ba565b6000826135a3576135a3613503565b500490565b6000825160005b818110156135c957602081860181015185830152016135af565b506000920191825250919050565b6000602082840312156135e957600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600081613615576136156134ba565b506000190190565b60006001820161362f5761362f6134ba565b5060010190565b600181815b80851115613671578160001904821115613657576136576134ba565b8085161561366457918102915b93841c939080029061363b565b509250929050565b600082613688575060016120a6565b81613695575060006120a6565b81600181146136ab57600281146136b5576136d1565b60019150506120a6565b60ff8411156136c6576136c66134ba565b50506001821b6120a6565b5060208310610133831016604e8410600b84101617156136f4575081810a6120a6565b6136fe8383613636565b8060001904821115613712576137126134ba565b029392505050565b6000612a538383613679565b60008261373557613735613503565b50069056fea264697066735822122010b0588d77cc7957ac8ce62a89ab8a7dc1901d252e18c3db268b4e95ed5f66bb64736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101b95760003560e01c8063a1a9ad55116100f9578063c766696311610097578063d76c897e11610071578063d76c897e146104ba578063e153d799146104e5578063e1861b0814610513578063f2fde38b1461051c57600080fd5b8063c76669631461047a578063cbf496c01461048d578063d3aee351146104a057600080fd5b8063ba67ee48116100d3578063ba67ee481461034b578063baa94ea214610432578063bcbaf7701461045e578063c51904361461047157600080fd5b8063a1a9ad5514610327578063a4059e071461032f578063ab556e9f1461033857600080fd5b80635dcaabb711610166578063715018a611610140578063715018a6146102935780638da5cb5b1461029b5780639863282d146102b65780639b35035a1461031457600080fd5b80635dcaabb71461026e57806365e700de1461028157806367b49cc71461028a57600080fd5b806339536c8f1161019757806339536c8f14610230578063408801941461024757806343a6c5a61461025a57600080fd5b8063104202ae146101be57806312420766146101ee578063217742a71461021b575b600080fd5b6005546101d1906001600160401b031681565b6040516001600160401b0390911681526020015b60405180910390f35b6004546005546001600160401b03165b604080519283526001600160401b039091166020830152016101e5565b61022e610229366004612f48565b61052f565b005b610239600a5481565b6040519081526020016101e5565b600b546101d1906001600160401b031681565b600a54600b546001600160401b03166101fe565b61022e61027c3660046130b2565b610c1a565b610239600d5481565b610239600e5481565b61022e610d13565b6028546040516001600160a01b0390911681526020016101e5565b6000546001546002546003546102e1936001600160401b0380821694600160401b9092041692909185565b604080516001600160401b039687168152959094166020860152928401919091526060830152608082015260a0016101e5565b61022e61032236600461315f565b610d7e565b61022e610e2a565b610239600c5481565b61022e610346366004613265565b611303565b6040805160a080820183526010546001600160401b038082168452600160401b9182900481166020808601919091526011548587015260125460608087019190915260135460808088019190915287519586018852601454808516875294909404831685830152601554858801526016548582015260175493850193909352601954601b54601d54601f5489518086018b52855481528a519788018b5260215487168852602254888701528a519586018b5260235486529987019490945260245461041d999396929591949392911689565b6040516101e5999897969594939291906132a9565b610445610440366004613391565b6114c4565b6040516001600160e01b031990911681526020016101e5565b6101d161046c366004613391565b6114fb565b61023960045481565b6025546101d1906001600160401b031681565b61022e61049b3660046133aa565b611538565b6025546101d190600160401b90046001600160401b031681565b6006546007546008546009546102e1936001600160401b0380821694600160401b9092041692909185565b600054600c54600e54604080516001600160401b0390941684526020840192909252908201526060016101e5565b610239600f5481565b61022e61052a366004613491565b611627565b61053881611709565b6040805161024081018252601080546001600160401b038082166101a08501908152600160401b9283900482166101c08601526011546101e08601526012546102008601526013546102208601528452845160a081018652601454808316825292909204166020828101919091526015548286015260165460608301526017546080830152808401919091526018805485518184028101840187528181526107b896889695949086019391929083018282801561061457602002820191906000526020600020905b815481526020019060010190808311610600575b5050505050815260200160098201548152602001600a820180548060200260200160405190810160405280929190818152602001828054801561067657602002820191906000526020600020905b815481526020019060010190808311610662575b50505050508152602001600b8201548152602001600c82018054806020026020016040519081016040528092919081815260200182805480156106d857602002820191906000526020600020905b8154815260200190600101908083116106c4575b50505050508152602001600d8201548152602001600e820180548060200260200160405190810160405280929190818152602001828054801561073a57602002820191906000526020600020905b815481526020019060010190808311610726575b5050509183525050600f820154602080830191909152604080518083018252601085015481528184015280516060818101835260118601546001600160401b03908116835260128701548386015283519485018452601387015485529282019390935291830191909152601490920154909116608090910152611e2c565b1561093f5780518051601080546020808501516001600160401b039485166001600160801b031993841617600160401b91861682021784556040808701516011556060808801516012556080978801516013558389015180516014805483880151928b169816979097179816909302969096179093558083015160155593840151601655929093015160175591830151805184939261085c92601892910190612c6d565b50606082015160098201556080820151805161088291600a840191602090910190612c6d565b5060a0820151600b82015560c082015180516108a891600c840191602090910190612c6d565b5060e0820151600d82015561010082015180516108cf91600e840191602090910190612c6d565b50610120820151600f82015561014082015151601082015561016082015180516011830180546001600160401b0392831667ffffffffffffffff19918216179091556020830151601285015560409092015151601384015561018090930151601490920180549290931691161790555b602554610160820151516001600160401b03600160401b90920482169116111561099b5761016081015151602580546001600160401b03909216600160401b026fffffffffffffffff0000000000000000199092169190911790555b6109a36120ac565b6001600160401b0316816101600151600001516001600160401b03161180156109dc57506006548151516001600160401b039182169116115b15610a9757805180516006805460208401516001600160401b03908116600160401b026001600160801b0319909216908416171790556040808301516007556060830151600881905560809093015160095560a0840151600a81905590517f8eba85cf1bad9a86550001d8f2f6d6f2d892aff5ef507b89e03f785e066f93a893610a8e939290916000906001600160401b03949094168452602084019290925260408301521515606082015260800190565b60405180910390a15b6000610aa882610100015151151590565b8015610ab8575060408201515115155b8015610af05750815151610acb906120e0565b6001600160401b0316610ae58360200151600001516120e0565b6001600160401b0316145b8015610afc5750600e54155b9050610b10826101600151600001516120f3565b8015610b3657506000546020830151516001600160401b0391821691161180610b365750805b15610c1657610b448261211e565b601080546001600160801b03199081168255600060118190556012819055601381905560148054909216909155601581905560168190556017819055610b8b601882612cb8565b6009820160009055600a82016000610ba39190612cb8565b600b820160009055600c82016000610bbb9190612cb8565b600d820160009055600e82016000610bd39190612cb8565b506000600f82018190556010820181905560118201805467ffffffffffffffff199081169091556012830182905560138301919091556014909101805490911690555b5050565b604080516101a08101825282518152815160a08082018452600080835260208084018290528386018290526060808501839052608094850183905286518085018852838152808301849052808801849052808201849052808601849052828701528651838152808301885286880152808601839052865183815280830188528587015281880151938601939093528686015160c086015260e08501829052855182815280820187526101008601526101208501829052855180820187528290528551908101909552845261014083019390935291830151610160820152908201516001600160401b0316610180820152610c168161052f565b6028546001600160a01b03163314610d725760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b610d7c6000612428565b565b604080516101a0810182528251815260208084015181830152838301518284015260006060830181905283518181529182019093526080820190815260006020808301829052604080518381529182018152909201919050815260200183606001518152602001836080015181526020018360a0015181526020018360c0015181526020018360e0015181526020018361010001516001600160401b03168152509050610c168161052f565b6028546001600160a01b03163314610e845760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610d69565b600054610e9e9062015180906001600160401b03166134d0565b610ea6612492565b6001600160401b031611610efc5760405162461bcd60e51b815260206004820152601260248201527f74696d656f7574206e6f742070617373656400000000000000000000000000006044820152606401610d69565b6010546001600160401b0316610f545760405162461bcd60e51b815260206004820152601460248201527f6e6f20626573742076616c6964207570646174650000000000000000000000006044820152606401610d69565b6000546014546001600160401b03918216911611610fb45760105460148054600160401b8084046001600160401b039081169091026001600160801b03199092169316929092179190911790556011546015556012546016556013546017555b6040805161024081018252601080546001600160401b038082166101a08501908152600160401b9283900482166101c08601526011546101e08601526012546102008601526013546102208601528452845160a08101865260145480831682529290920416602082810191909152601554828601526016546060830152601754608083015280840191909152601880548551818402810184018752818152611230968601939092919083018282801561108c57602002820191906000526020600020905b815481526020019060010190808311611078575b5050505050815260200160098201548152602001600a82018054806020026020016040519081016040528092919081815260200182805480156110ee57602002820191906000526020600020905b8154815260200190600101908083116110da575b50505050508152602001600b8201548152602001600c820180548060200260200160405190810160405280929190818152602001828054801561115057602002820191906000526020600020905b81548152602001906001019080831161113c575b50505050508152602001600d8201548152602001600e82018054806020026020016040519081016040528092919081815260200182805480156111b257602002820191906000526020600020905b81548152602001906001019080831161119e575b5050509183525050600f820154602080830191909152604080518083018252601085015481528184015280516060818101835260118601546001600160401b0390811683526012870154838601528351948501845260138701548552928201939093529183019190915260149092015490911660809091015261211e565b601080546001600160801b03199081168255600060118190556012819055601381905560148054909216909155601581905560168190556017819055611277601882612cb8565b6009820160009055600a8201600061128f9190612cb8565b600b820160009055600c820160006112a79190612cb8565b600d820160009055600e820160006112bf9190612cb8565b506000600f82018190556010820181905560118201805467ffffffffffffffff19908116909155601283018290556013830191909155601490910180549091169055565b6028546001600160a01b0316331461135d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610d69565b6001600160e01b031981166113b45760405162461bcd60e51b815260206004820152601460248201527f696e76616c696420666f726b2076657273696f6e0000000000000000000000006044820152606401610d69565b60268054600181810190925560048082047f744a2cf8fd7008e3d53b67916e73460df9fa5214e3ef23dd4259ca09493a35940180546001600160401b0380881660086003909616860261010090810a9182029290910219909216179091556027805494850181556000529183047f98a476f1687bc3d60a2da2adbcba2c46958e61fa2fb4042cd7bc5816a710195b01805460e086901c600790951690920290920a92830263ffffffff90930219169190911790556040517f3d992c45d9456d8ebe181b6a66a3721421393afaa297791373e7569c1abcc8af906114b890849084906001600160401b039290921682526001600160e01b031916602082015260400190565b60405180910390a15050565b602781815481106114d457600080fd5b9060005260206000209060089182820401919006600402915054906101000a900460e01b81565b6026818154811061150b57600080fd5b9060005260206000209060049182820401919006600802915054906101000a90046001600160401b031681565b6000604051806101a0016040528083600001518152602001836020015181526020018360400151815260200183606001518152602001836080015181526020016000801b815260200160006001600160401b0381111561159a5761159a612ce7565b6040519080825280602002602001820160405280156115c3578160200160208202803683370190505b5081526000602080830182905260408051838152808301825281850152606084018390528051808301825283905280519182019052908152608082015260a0848101519082015260c0808501516001600160401b03169101529050610c168161052f565b6028546001600160a01b031633146116815760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610d69565b6001600160a01b0381166116fd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610d69565b61170681612428565b50565b6001816101600151600001516001600160401b0316116117765760405162461bcd60e51b815260206004820152602260248201527f6e6f7420656e6f75676820636f6d6d697474656520706172746963697061746960448201526137b760f11b6064820152608401610d69565b8051516001600160401b031661178a612492565b6001600160401b03161180156117b357506020810151518151516001600160401b039182169116115b6117ff5760405162461bcd60e51b815260206004820152600c60248201527f696e76616c696420736c6f7400000000000000000000000000000000000000006044820152606401610d69565b60008054611815906001600160401b03166120e0565b9050600061182a8360200151600001516120e0565b9050816001600160401b0316816001600160401b0316148061186757506118528260016134e3565b6001600160401b0316816001600160401b0316145b61187057600080fd5b82515160009061187f906120e0565b600e5490915060009015801561189a57506101008501515115155b80156118b75750836001600160401b0316826001600160401b0316145b6000548651519192506001600160401b03908116911611806118d65750805b6118df57600080fd5b604085015151611944576020850151606001511561193f5760405162461bcd60e51b815260206004820152601160248201527f6e6f2066696e616c6974792070726f6f660000000000000000000000000000006044820152606401610d69565b611a26565b6020850151516001600160401b03166000036119b0576020850151606001511561193f5760405162461bcd60e51b815260206004820152601e60248201527f67656e65736973206865616465722073686f756c6420626520656d70747900006044820152606401610d69565b60006119d56119c287602001516124ca565b6040880151885160600151606990612840565b905080611a245760405162461bcd60e51b815260206004820152601660248201527f696e76616c69642066696e616c6974792070726f6f66000000000000000000006044820152606401610d69565b505b608085015151611a8757606085015115611a825760405162461bcd60e51b815260206004820152601b60248201527f6e6f20657865637574696f6e2066696e616c6974792070726f6f6600000000006044820152606401610d69565b611b4a565b604085015151611ad95760405162461bcd60e51b815260206004820152601b60248201527f6e6f20657865637574696f6e2066696e616c6974792070726f6f6600000000006044820152606401610d69565b6000611af986606001518760800151610382896020015160600151612840565b905080611b485760405162461bcd60e51b815260206004820181905260248201527f696e76616c696420657865637574696f6e2066696e616c6974792070726f6f666044820152606401610d69565b505b60c085015151611bab5760a085015115611ba65760405162461bcd60e51b815260206004820152601d60248201527f6e6f20657865637574696f6e206f7074696d69737469632070726f6f660000006044820152606401610d69565b611c27565b6000611bcb8660a001518760c00151610382896000015160600151612840565b905080611c255760405162461bcd60e51b815260206004820152602260248201527f696e76616c696420657865637574696f6e206f7074696d69737469632070726f60448201526137b360f11b6064820152608401610d69565b505b61010085015151611c985760e0850151158015611c475750610120850151155b611c935760405162461bcd60e51b815260206004820152601c60248201527f6e6f206e6578742073796e6320636f6d6d69747465652070726f6f66000000006044820152606401610d69565b611d8f565b836001600160401b0316826001600160401b0316148015611cba5750600e5415155b15611d1457600e548560e0015114611d145760405162461bcd60e51b815260206004820152601b60248201527f696e76616c6964206e6578742073796e6320636f6d6d697474656500000000006044820152606401610d69565b6000611d348660e001518761010001516037896000015160600151612840565b905080611d8d5760405162461bcd60e51b815260206004820152602160248201527f696e76616c6964206e6578742073796e6320636f6d6d69747465652070726f6f6044820152603360f91b6064820152608401610d69565b505b6000611da7611da287610180015161285a565b612867565b90506000611db482612922565b90506000611dc68860000151836129d8565b905087610160015160200151600d5414611e225760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420636f6d6d697474656520706f736569646f6e20726f6f74006044820152606401610d69565b5050505050505050565b610160810151516000906001600160401b03168103611e5d5750610160820151516001600160401b031615156120a6565b6000611e71846101600151600001516120f3565b90506000611e87846101600151600001516120f3565b905080151582151514611ea857818015611e9f575080155b925050506120a6565b81158015611ece5750610160808501515190860151516001600160401b03908116911614155b15611ef657505050610160808201515190830151516001600160401b039182169116116120a6565b6000611f0186612a5a565b90506000611f0e86612a5a565b905080151582151514611f26575092506120a6915050565b6000611f36886040015151151590565b90506000611f48886040015151151590565b905080151582151514611f62575094506120a69350505050565b8115611ff157885151600090611f77906120e0565b6001600160401b0316611f918b60200151600001516120e0565b6001600160401b03161490506000611fb08a60000151600001516120e0565b6001600160401b0316611fca8b60200151600001516120e0565b6001600160401b03161490508115158114611fee575096506120a695505050505050565b50505b6101608089015151908a0151516001600160401b0390811691161461204457876101600151600001516001600160401b0316896101600151600001516001600160401b03161196505050505050506120a6565b8751518951516001600160401b0390811691161461207e5750508551518751516001600160401b0391821691161094506120a69350505050565b8761018001516001600160401b03168961018001516001600160401b03161096505050505050505b92915050565b6025546000906002906120d1906001600160401b03600160401b8204811691166134e3565b6120db9190613519565b905090565b60006120a66120ee8361285a565b612aaa565b6000612102610200600261353f565b61210d836003613556565b6001600160401b0316101592915050565b60008054612134906001600160401b03166120e0565b905060006121498360200151600001516120e0565b600e549091506121e157816001600160401b0316816001600160401b03161461217157600080fd5b60e0830151600e55610120830151600f557fdc7ba15c782b181b9d54a996db4ab8a32182bff2bfb09e4aca8ed9ea9e5380c76121ae8260016134e3565b600e54600f54604080516001600160401b03909416845260208401929092529082015260600160405180910390a16122a0565b6121ec8260016134e3565b6001600160401b0316816001600160401b0316036122a057600e8054600c55600f8054600d5560e0850151909155610120840151905560258054600160401b81046001600160401b03166001600160801b03199091161790557fdc7ba15c782b181b9d54a996db4ab8a32182bff2bfb09e4aca8ed9ea9e5380c76122718260016134e3565b600e54600f54604080516001600160401b03909416845260208401929092529082015260600160405180910390a15b6000546020840151516001600160401b039182169116111561242357602080840151805160008054938301516001600160401b03908116600160401b026001600160801b0319909516921691909117929092179091556040810151600155606080820151600255608090910151600355830151156123475760608301516004556020830151516005805467ffffffffffffffff19166001600160401b039092169190911790555b6006546000546001600160401b03918216911611156123be5760005460068054600160401b8084046001600160401b039081169091026001600160801b03199092169316928317179055600154600755600254600855600354600955600454600a55600b805467ffffffffffffffff191690911790555b602083810151805160609182015182870151604080516001600160401b03909416845294830191909152928101929092526001908201527f8eba85cf1bad9a86550001d8f2f6d6f2d892aff5ef507b89e03f785e066f93a89060800160405180910390a15b505050565b602880546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000600c6124c07f000000000000000000000000000000000000000000000000000000000000000042613581565b6120db9190613594565b6000806002806124e685600001516001600160401b0316612ab8565b6124fc86602001516001600160401b0316612ab8565b60408051602081019390935282015260600160408051601f1981840301815290829052612528916135a8565b602060405180830381855afa158015612545573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061256891906135d7565b60028560400151866060015160405160200161258e929190918252602082015260400190565b60408051601f19818403018152908290526125a8916135a8565b602060405180830381855afa1580156125c5573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906125e891906135d7565b60408051602081019390935282015260600160408051601f1981840301815290829052612614916135a8565b602060405180830381855afa158015612631573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061265491906135d7565b9050600060028085608001516000801b60405160200161267e929190918252602082015260400190565b60408051601f1981840301815290829052612698916135a8565b602060405180830381855afa1580156126b5573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906126d891906135d7565b6040516002906126f8906000908190602001918252602082015260400190565b60408051601f1981840301815290829052612712916135a8565b602060405180830381855afa15801561272f573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061275291906135d7565b60408051602081019390935282015260600160408051601f198184030181529082905261277e916135a8565b602060405180830381855afa15801561279b573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906127be91906135d7565b9050600282826040516020016127de929190918252602082015260400190565b60408051601f19818403018152908290526127f8916135a8565b602060405180830381855afa158015612815573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061283891906135d7565b949350505050565b60008061284e868686612af1565b90921495945050505050565b60006120a6602083613519565b602754600090819061287b90600190613581565b90505b60268181548110612891576128916135f0565b90600052602060002090600491828204019190066008029054906101000a90046001600160401b03166001600160401b0316836001600160401b03161061291057602781815481106128e5576128e56135f0565b90600052602060002090600891828204019190066004029054906101000a900460e01b915050919050565b8061291a81613606565b91505061287e565b600060206002837f00000000000000000000000000000000000000000000000000000000000000006040516020016129709291906001600160e01b0319929092168252602082015260400190565b60408051601f198184030181529082905261298a916135a8565b602060405180830381855afa1580156129a7573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906129ca91906135d7565b6307000000911c1792915050565b600060026129e5846124ca565b604080516020810192909252810184905260600160408051601f1981840301815290829052612a13916135a8565b602060405180830381855afa158015612a30573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190612a5391906135d7565b9392505050565b6000612a6b82610100015151151590565b80156120a65750612a808261018001516120e0565b6001600160401b0316612a9a8360000151600001516120e0565b6001600160401b03161492915050565b60006120a661010083613519565b60008060005b6020811015612aea57600884811c9460ff1692901b919091179080612ae28161361d565b915050612abe565b5092915050565b600083815b8451811015612c64576002612b0b828261371a565b612b159086613594565b612b1f9190613726565b600103612bbe576002858281518110612b3a57612b3a6135f0565b602002602001015183604051602001612b5d929190918252602082015260400190565b60408051601f1981840301815290829052612b77916135a8565b602060405180830381855afa158015612b94573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190612bb791906135d7565b9150612c52565b600282868381518110612bd357612bd36135f0565b6020026020010151604051602001612bf5929190918252602082015260400190565b60408051601f1981840301815290829052612c0f916135a8565b602060405180830381855afa158015612c2c573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190612c4f91906135d7565b91505b80612c5c8161361d565b915050612af6565b50949350505050565b828054828255906000526020600020908101928215612ca8579160200282015b82811115612ca8578251825591602001919060010190612c8d565b50612cb4929150612cd2565b5090565b508054600082559060005260206000209081019061170691905b5b80821115612cb45760008155600101612cd3565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b0381118282101715612d1f57612d1f612ce7565b60405290565b6040516101a081016001600160401b0381118282101715612d1f57612d1f612ce7565b60405161012081016001600160401b0381118282101715612d1f57612d1f612ce7565b60405160e081016001600160401b0381118282101715612d1f57612d1f612ce7565b80356001600160401b0381168114612da457600080fd5b919050565b600060a08284031215612dbb57600080fd5b612dc3612cfd565b9050612dce82612d8d565b8152612ddc60208301612d8d565b602082015260408201356040820152606082013560608201526080820135608082015292915050565b600082601f830112612e1657600080fd5b813560206001600160401b0380831115612e3257612e32612ce7565b8260051b604051601f19603f83011681018181108482111715612e5757612e57612ce7565b604052938452858101830193838101925087851115612e7557600080fd5b83870191505b84821015612e9457813583529183019190830190612e7b565b979650505050505050565b600060208284031215612eb157600080fd5b604051602081018181106001600160401b0382111715612ed357612ed3612ce7565b6040529135825250919050565b600060608284031215612ef257600080fd5b604051606081018181106001600160401b0382111715612f1457612f14612ce7565b604052905080612f2383612d8d565b815260208301356020820152612f3c8460408501612e9f565b60408201525092915050565b600060208284031215612f5a57600080fd5b81356001600160401b0380821115612f7157600080fd5b908301906102e08286031215612f8657600080fd5b612f8e612d25565b612f988684612da9565b8152612fa78660a08501612da9565b60208201526101408084013583811115612fc057600080fd5b612fcc88828701612e05565b6040840152506101608085013560608401526101808086013585811115612ff257600080fd5b612ffe8a828901612e05565b6080860152506101a086013560a08501526101c08601358581111561302257600080fd5b61302e8a828901612e05565b60c0860152506101e086013560e08501526102008601358581111561305257600080fd5b61305e8a828901612e05565b6101008601525061022086013561012085015261307f896102408801612e9f565b83850152613091896102608801612ee0565b828501526130a26102c08701612d8d565b9084015250909695505050505050565b6000602082840312156130c457600080fd5b81356001600160401b03808211156130db57600080fd5b9083019061016082860312156130f057600080fd5b6130f8612cfd565b6131028684612da9565b815260a0830135602082015260c08301358281111561312057600080fd5b61312c87828601612e05565b60408301525061313f8660e08501612ee0565b60608201526131516101408401612d8d565b608082015295945050505050565b60006020828403121561317157600080fd5b81356001600160401b038082111561318857600080fd5b90830190610260828603121561319d57600080fd5b6131a5612d48565b6131af8684612da9565b81526131be8660a08501612da9565b6020820152610140830135828111156131d657600080fd5b6131e287828601612e05565b60408301525061016083013560608201526101808301358281111561320657600080fd5b61321287828601612e05565b6080830152506101a083013560a0820152613231866101c08501612e9f565b60c0820152613244866101e08501612ee0565b60e08201526132566102408401612d8d565b61010082015295945050505050565b6000806040838503121561327857600080fd5b61328183612d8d565b915060208301356001600160e01b03198116811461329e57600080fd5b809150509250929050565b61026081016132f0828c6001600160401b03808251168352806020830151166020840152506040810151604083015260608101516060830152608081015160808301525050565b89516001600160401b0390811660a084015260208b01511660c083015260408a015160e083015260608a015161010083015260808a01516101208301526101408201989098526101608101969096526101808601949094526101a0850192909252516101c084015280516001600160401b039081166101e0850152602082015161020085015260409091015151610220840152166102409091015292915050565b6000602082840312156133a357600080fd5b5035919050565b6000602082840312156133bc57600080fd5b81356001600160401b03808211156133d357600080fd5b9083019061022082860312156133e857600080fd5b6133f0612d6b565b6133fa8684612da9565b81526134098660a08501612da9565b60208201526101408301358281111561342157600080fd5b61342d87828601612e05565b60408301525061016083013560608201526101808301358281111561345157600080fd5b61345d87828601612e05565b608083015250613471866101a08501612ee0565b60a08201526134836102008401612d8d565b60c082015295945050505050565b6000602082840312156134a357600080fd5b81356001600160a01b0381168114612a5357600080fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156120a6576120a66134ba565b6001600160401b03818116838216019080821115612aea57612aea6134ba565b634e487b7160e01b600052601260045260246000fd5b60006001600160401b038084168061353357613533613503565b92169190910492915050565b80820281158282048414176120a6576120a66134ba565b6001600160401b03818116838216028082169190828114613579576135796134ba565b505092915050565b818103818111156120a6576120a66134ba565b6000826135a3576135a3613503565b500490565b6000825160005b818110156135c957602081860181015185830152016135af565b506000920191825250919050565b6000602082840312156135e957600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600081613615576136156134ba565b506000190190565b60006001820161362f5761362f6134ba565b5060010190565b600181815b80851115613671578160001904821115613657576136576134ba565b8085161561366457918102915b93841c939080029061363b565b509250929050565b600082613688575060016120a6565b81613695575060006120a6565b81600181146136ab57600281146136b5576136d1565b60019150506120a6565b60ff8411156136c6576136c66134ba565b50506001821b6120a6565b5060208310610133831016604e8410600b84101617156136f4575081810a6120a6565b6136fe8383613636565b8060001904821115613712576137126134ba565b029392505050565b6000612a538383613679565b60008261373557613735613503565b50069056fea264697066735822122010b0588d77cc7957ac8ce62a89ab8a7dc1901d252e18c3db268b4e95ed5f66bb64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 38729,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "finalizedHeader",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(BeaconBlockHeader)39060_storage"
      },
      {
        "astId": 38731,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "finalizedExecutionStateRoot",
        "offset": 0,
        "slot": "4",
        "type": "t_bytes32"
      },
      {
        "astId": 38733,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "finalizedExecutionStateRootSlot",
        "offset": 0,
        "slot": "5",
        "type": "t_uint64"
      },
      {
        "astId": 38736,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "optimisticHeader",
        "offset": 0,
        "slot": "6",
        "type": "t_struct(BeaconBlockHeader)39060_storage"
      },
      {
        "astId": 38738,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "optimisticExecutionStateRoot",
        "offset": 0,
        "slot": "10",
        "type": "t_bytes32"
      },
      {
        "astId": 38740,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "optimisticExecutionStateRootSlot",
        "offset": 0,
        "slot": "11",
        "type": "t_uint64"
      },
      {
        "astId": 38742,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "currentSyncCommitteeRoot",
        "offset": 0,
        "slot": "12",
        "type": "t_bytes32"
      },
      {
        "astId": 38744,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "currentSyncCommitteePoseidonRoot",
        "offset": 0,
        "slot": "13",
        "type": "t_bytes32"
      },
      {
        "astId": 38746,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "nextSyncCommitteeRoot",
        "offset": 0,
        "slot": "14",
        "type": "t_bytes32"
      },
      {
        "astId": 38748,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "nextSyncCommitteePoseidonRoot",
        "offset": 0,
        "slot": "15",
        "type": "t_bytes32"
      },
      {
        "astId": 38751,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "bestValidUpdate",
        "offset": 0,
        "slot": "16",
        "type": "t_struct(LightClientUpdate)39178_storage"
      },
      {
        "astId": 38753,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "previousMaxActiveParticipants",
        "offset": 0,
        "slot": "37",
        "type": "t_uint64"
      },
      {
        "astId": 38755,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "currentMaxActiveParticipants",
        "offset": 8,
        "slot": "37",
        "type": "t_uint64"
      },
      {
        "astId": 38758,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "forkEpochs",
        "offset": 0,
        "slot": "38",
        "type": "t_array(t_uint64)dyn_storage"
      },
      {
        "astId": 38761,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "forkVersions",
        "offset": 0,
        "slot": "39",
        "type": "t_array(t_bytes4)dyn_storage"
      },
      {
        "astId": 7,
        "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
        "label": "_owner",
        "offset": 0,
        "slot": "40",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes4)dyn_storage": {
        "base": "t_bytes4",
        "encoding": "dynamic_array",
        "label": "bytes4[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint64)dyn_storage": {
        "base": "t_uint64",
        "encoding": "dynamic_array",
        "label": "uint64[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_struct(BeaconBlockHeader)39060_storage": {
        "encoding": "inplace",
        "label": "struct BeaconBlockHeader",
        "members": [
          {
            "astId": 39051,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "slot",
            "offset": 0,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 39053,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "proposerIndex",
            "offset": 8,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 39055,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "parentRoot",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          },
          {
            "astId": 39057,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "stateRoot",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32"
          },
          {
            "astId": 39059,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "bodyRoot",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(LightClientUpdate)39178_storage": {
        "encoding": "inplace",
        "label": "struct LightClientUpdate",
        "members": [
          {
            "astId": 39146,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "attestedHeader",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(BeaconBlockHeader)39060_storage"
          },
          {
            "astId": 39149,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "finalizedHeader",
            "offset": 0,
            "slot": "4",
            "type": "t_struct(BeaconBlockHeader)39060_storage"
          },
          {
            "astId": 39152,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "finalityBranch",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 39154,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "finalizedExecutionStateRoot",
            "offset": 0,
            "slot": "9",
            "type": "t_bytes32"
          },
          {
            "astId": 39157,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "finalizedExecutionStateRootBranch",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 39159,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "optimisticExecutionStateRoot",
            "offset": 0,
            "slot": "11",
            "type": "t_bytes32"
          },
          {
            "astId": 39162,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "optimisticdExecutionStateRootBranch",
            "offset": 0,
            "slot": "12",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 39164,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "nextSyncCommitteeRoot",
            "offset": 0,
            "slot": "13",
            "type": "t_bytes32"
          },
          {
            "astId": 39167,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "nextSyncCommitteeBranch",
            "offset": 0,
            "slot": "14",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 39169,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "nextSyncCommitteePoseidonRoot",
            "offset": 0,
            "slot": "15",
            "type": "t_bytes32"
          },
          {
            "astId": 39172,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "nextSyncCommitteeRootMappingProof",
            "offset": 0,
            "slot": "16",
            "type": "t_struct(Proof)39189_storage"
          },
          {
            "astId": 39175,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "syncAggregate",
            "offset": 0,
            "slot": "17",
            "type": "t_struct(SyncAggregate)39186_storage"
          },
          {
            "astId": 39177,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "signatureSlot",
            "offset": 0,
            "slot": "20",
            "type": "t_uint64"
          }
        ],
        "numberOfBytes": "672"
      },
      "t_struct(Proof)39189_storage": {
        "encoding": "inplace",
        "label": "struct Proof",
        "members": [
          {
            "astId": 39188,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "placeholder",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(SyncAggregate)39186_storage": {
        "encoding": "inplace",
        "label": "struct SyncAggregate",
        "members": [
          {
            "astId": 39180,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "participation",
            "offset": 0,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 39182,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "poseidonRoot",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          },
          {
            "astId": 39185,
            "contract": "contracts/light-client/EthereumLightClient.sol:EthereumLightClient",
            "label": "proof",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(Proof)39189_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}