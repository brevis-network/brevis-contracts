{
  "address": "0x1d347182554FD6B40846E60c40ae42eac42EDAC2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_messageBridge",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "vaultToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pegToken",
          "type": "address"
        }
      ],
      "name": "BridgeTokenAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "vaultToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pegToken",
          "type": "address"
        }
      ],
      "name": "BridgeTokenDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "burnId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "burnAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "withdrawAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "MinBurnUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "mintId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "refId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "_toChainId",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "_withdrawAccount",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_pegTokens",
          "type": "address[]"
        }
      ],
      "name": "deletePegTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_vaultTokens",
          "type": "address[]"
        }
      ],
      "name": "deleteVaultTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messageBridge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minBurn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pegToVaultTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        }
      ],
      "name": "receiveMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "records",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "remoteTokenVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_vaultTokens",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_pegTokens",
          "type": "address[]"
        }
      ],
      "name": "setBridgeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_messageBridge",
          "type": "address"
        }
      ],
      "name": "setMessageBridge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "setMinBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_remoteTokenVault",
          "type": "address"
        }
      ],
      "name": "setRemoteTokenVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "supplies",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vaultToPegTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xdf2439a61ae72bd39f8298129a293d1537d851aad18d7f23b1167795df433bec",
  "receipt": {
    "to": null,
    "from": "0x9532f934EfcE6c4Bf5BA078b25fDd81a780FBdfB",
    "contractAddress": "0x1d347182554FD6B40846E60c40ae42eac42EDAC2",
    "transactionIndex": 78,
    "gasUsed": "1329553",
    "logsBloom": "0x00000000000000000000080000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000020000000000000000000800000000000000000000000000000000400000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000020040000000000000000000000000000000000000000000000000800000000000000",
    "blockHash": "0xec2a89f5cbcfa824230cf8c78f6fca87a1447ae144e4fcf601bf1c7def39b002",
    "transactionHash": "0xdf2439a61ae72bd39f8298129a293d1537d851aad18d7f23b1167795df433bec",
    "logs": [
      {
        "transactionIndex": 78,
        "blockNumber": 8623404,
        "transactionHash": "0xdf2439a61ae72bd39f8298129a293d1537d851aad18d7f23b1167795df433bec",
        "address": "0x1d347182554FD6B40846E60c40ae42eac42EDAC2",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000009532f934efce6c4bf5ba078b25fdd81a780fbdfb"
        ],
        "data": "0x",
        "logIndex": 107,
        "blockHash": "0xec2a89f5cbcfa824230cf8c78f6fca87a1447ae144e4fcf601bf1c7def39b002"
      }
    ],
    "blockNumber": 8623404,
    "cumulativeGasUsed": "9473153",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5d748Cb4767D44842626122ED399177207ffD458"
  ],
  "numDeployments": 4,
  "solcInputHash": "ed97ce3b095369a6c844b227ea03481b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_messageBridge\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vaultToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pegToken\",\"type\":\"address\"}],\"name\":\"BridgeTokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vaultToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pegToken\",\"type\":\"address\"}],\"name\":\"BridgeTokenDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"burnId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"burnAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MinBurnUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"mintId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"refId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_toChainId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_withdrawAccount\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_pegTokens\",\"type\":\"address[]\"}],\"name\":\"deletePegTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_vaultTokens\",\"type\":\"address[]\"}],\"name\":\"deleteVaultTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageBridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minBurn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pegToVaultTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"receiveMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"records\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remoteTokenVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_vaultTokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_pegTokens\",\"type\":\"address[]\"}],\"name\":\"setBridgeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_messageBridge\",\"type\":\"address\"}],\"name\":\"setMessageBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"setMinBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_remoteTokenVault\",\"type\":\"address\"}],\"name\":\"setRemoteTokenVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supplies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vaultToPegTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token-bridge/PegBridge.sol\":\"PegBridge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/interfaces/IEthereumLightClient.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity 0.8.18;\\n\\ninterface IEthereumLightClient {\\n    function finalizedExecutionStateRootAndSlot() external view returns (bytes32 root, uint64 slot);\\n}\\n\",\"keccak256\":\"0x8cc0b8d512c5e0cd18eb0fac842169a65eeca67d5e67cad48d19a52978fb3d73\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/message-bridge/interfaces/IMessageBridge.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicensed\\n\\npragma solidity 0.8.18;\\n\\nimport \\\"../../interfaces/IEthereumLightClient.sol\\\";\\n\\ninterface IMessageBridge {\\n    enum MessageStatus {\\n        NEW,\\n        INVALID,\\n        FAILED,\\n        EXECUTED\\n    }\\n\\n    event MessageSent(bytes32 indexed messageHash, uint256 indexed nonce, bytes message);\\n    event MessageExecuted(bytes32 indexed messageHash, uint256 indexed nonce, bytes message, bool success);\\n\\n    function lightClient() external view returns (IEthereumLightClient);\\n\\n    function sendMessage(\\n        address receiver,\\n        bytes calldata message,\\n        uint256 gasLimit\\n    ) external returns (bytes32);\\n\\n    function executeMessage(\\n        bytes calldata message,\\n        bytes[] calldata accountProof,\\n        bytes[] calldata storageProof\\n    ) external returns (bool);\\n\\n    function finalizedExecutionStateRootAndSlot() external view returns (bytes32 root, uint64 slot);\\n}\\n\",\"keccak256\":\"0xb823e38ec74306d5a2fc1c6b4616881117d0f8c9f16cd6f0fcc10957beb5dff2\",\"license\":\"Unlicensed\"},\"contracts/token-bridge/MessageApp.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity 0.8.18;\\n\\nabstract contract MessageApp {\\n    modifier onlyMessageBridge() {\\n        require(msg.sender == messageBridge, \\\"caller is not message bridge\\\");\\n        _;\\n    }\\n    address public messageBridge;\\n\\n    function setMessageBridge(address _messageBridge) external {\\n        messageBridge = _messageBridge;\\n    }\\n}\\n\",\"keccak256\":\"0x79dca498bb9881b8b28688ef175901000e55c79e692b7183ee063e1e9b906cdf\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/token-bridge/PegBridge.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicensed\\npragma solidity 0.8.18;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"../message-bridge/interfaces/IMessageBridge.sol\\\";\\nimport \\\"./MessageApp.sol\\\";\\n\\ninterface IPeggedToken {\\n    function mint(address _to, uint256 _amount) external;\\n\\n    function burn(address _from, uint256 _amount) external;\\n}\\n\\ncontract PegBridge is MessageApp, Ownable {\\n    using SafeERC20 for IERC20;\\n    uint256 private constant GAS_LIMIT = 1000000;\\n\\n    mapping(bytes32 => bool) public records;\\n    mapping(address => uint256) public supplies;\\n    mapping(address => address) public vaultToPegTokens; // vault -> peg\\n    mapping(address => address) public pegToVaultTokens; // peg -> vault\\n\\n    mapping(address => uint256) public minBurn;\\n\\n    address public remoteTokenVault;\\n\\n    event Mint(bytes32 mintId, address account, address token, uint256 amount, bytes32 refId, address depositor);\\n\\n    event Burn(\\n        bytes32 burnId,\\n        address burnAccount,\\n        address token,\\n        uint256 amount,\\n        address withdrawAccount,\\n        uint64 nonce,\\n        bytes32 messageId\\n    );\\n\\n    event BridgeTokenAdded(address vaultToken, address pegToken);\\n    event BridgeTokenDeleted(address vaultToken, address pegToken);\\n\\n    event MinBurnUpdated(address token, uint256 amount);\\n\\n    constructor(address _messageBridge) {\\n        messageBridge = _messageBridge;\\n    }\\n\\n    function receiveMessage(address _sender, bytes calldata _message) external onlyMessageBridge {\\n        require(_sender == remoteTokenVault, \\\"sender is not remote token vault\\\");\\n        _mint(_message);\\n    }\\n\\n    function _mint(bytes calldata _message) private {\\n        (address vaultToken, uint256 amount, address mintAccount, address depositor, bytes32 depositId) = abi.decode(\\n            (_message),\\n            (address, uint256, address, address, bytes32)\\n        );\\n        address pegToken = vaultToPegTokens[vaultToken];\\n        require(pegToken != address(0), \\\"no peg token\\\");\\n        bytes32 mintId = keccak256(\\n            abi.encodePacked(pegToken, amount, mintAccount, depositor, depositId, address(this))\\n        );\\n        require(records[mintId] == false, \\\"record exists\\\");\\n        records[mintId] = true;\\n        IPeggedToken(pegToken).mint(mintAccount, amount);\\n        supplies[pegToken] += amount;\\n        emit Mint(mintId, mintAccount, pegToken, amount, depositId, depositor);\\n    }\\n\\n    function burn(\\n        address _token,\\n        uint256 _amount,\\n        uint64 _toChainId,\\n        address _withdrawAccount,\\n        uint64 _nonce\\n    ) external returns (bytes32) {\\n        bytes32 burnId = _burn(_token, _amount, _toChainId, _withdrawAccount, _nonce);\\n        IPeggedToken(_token).burn(msg.sender, _amount);\\n        return burnId;\\n    }\\n\\n    function _burn(\\n        address _token,\\n        uint256 _amount,\\n        uint64 _toChainId,\\n        address _withdrawAccount,\\n        uint64 _nonce\\n    ) private returns (bytes32) {\\n        require(_amount > minBurn[_token], \\\"amount too small\\\");\\n        address vaultToken = pegToVaultTokens[_token];\\n        require(vaultToken != address(0), \\\"no vault token\\\");\\n        supplies[_token] -= _amount;\\n        bytes32 burnId = keccak256(\\n            abi.encodePacked(\\n                msg.sender,\\n                _token,\\n                _amount,\\n                _toChainId,\\n                _withdrawAccount,\\n                _nonce,\\n                uint64(block.chainid),\\n                address(this)\\n            )\\n        );\\n        require(records[burnId] == false, \\\"record exists\\\");\\n        records[burnId] = true;\\n        bytes memory message = abi.encode(vaultToken, _amount, _withdrawAccount, msg.sender, burnId);\\n        bytes32 messageId = IMessageBridge(messageBridge).sendMessage(remoteTokenVault, message, GAS_LIMIT);\\n        emit Burn(burnId, msg.sender, _token, _amount, _withdrawAccount, _nonce, messageId);\\n        return burnId;\\n    }\\n\\n    function setBridgeTokens(address[] calldata _vaultTokens, address[] calldata _pegTokens) external onlyOwner {\\n        require(_vaultTokens.length == _pegTokens.length, \\\"length mismatch\\\");\\n        for (uint256 i = 0; i < _vaultTokens.length; i++) {\\n            vaultToPegTokens[_vaultTokens[i]] = _pegTokens[i];\\n            pegToVaultTokens[_pegTokens[i]] = _vaultTokens[i];\\n            emit BridgeTokenAdded(_vaultTokens[i], _pegTokens[i]);\\n        }\\n    }\\n\\n    function deletePegTokens(address[] calldata _pegTokens) external onlyOwner {\\n        for (uint256 i = 0; i < _pegTokens.length; i++) {\\n            address pegToken = _pegTokens[i];\\n            address vaultToken = pegToVaultTokens[pegToken];\\n            delete vaultToPegTokens[vaultToken];\\n            delete pegToVaultTokens[pegToken];\\n            emit BridgeTokenDeleted(vaultToken, pegToken);\\n        }\\n    }\\n\\n    function deleteVaultTokens(address[] calldata _vaultTokens) external onlyOwner {\\n        for (uint256 i = 0; i < _vaultTokens.length; i++) {\\n            address vaultToken = _vaultTokens[i];\\n            address pegToken = vaultToPegTokens[vaultToken];\\n            delete vaultToPegTokens[vaultToken];\\n            delete pegToVaultTokens[pegToken];\\n            emit BridgeTokenDeleted(vaultToken, pegToken);\\n        }\\n    }\\n\\n    function setMinBurn(address[] calldata _tokens, uint256[] calldata _amounts) external onlyOwner {\\n        require(_tokens.length == _amounts.length, \\\"length mismatch\\\");\\n        for (uint256 i = 0; i < _tokens.length; i++) {\\n            minBurn[_tokens[i]] = _amounts[i];\\n            emit MinBurnUpdated(_tokens[i], _amounts[i]);\\n        }\\n    }\\n\\n    function setRemoteTokenVault(address _remoteTokenVault) external onlyOwner {\\n        remoteTokenVault = _remoteTokenVault;\\n    }\\n}\\n\",\"keccak256\":\"0xf62f8c52074ad75c0a97d9f6410ffdb974cd56ee03dbed99ec656563cfbb468e\",\"license\":\"Unlicensed\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101365760003560e01c80637f856013116100b2578063a93ce09911610081578063bf4816f011610066578063bf4816f0146102e5578063f2fde38b146102f8578063fdbcd5db1461030b57600080fd5b8063a93ce099146102bf578063bca8db71146102d257600080fd5b80637f856013146102525780638da5cb5b1461027257806390fc2e2514610283578063a0029301146102ac57600080fd5b8063274cee311161010957806333a42db1116100ee57806333a42db11461022457806340b6cc3414610237578063715018a61461024a57600080fd5b8063274cee31146101c65780632be16dce146101f457600080fd5b806301e647251461013b5780630627d075146101735780630745fcce1461019e5780631cd90061146101b3575b600080fd5b61015e610149366004611264565b60026020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b600754610186906001600160a01b031681565b6040516001600160a01b03909116815260200161016a565b6101b16101ac3660046112c9565b610334565b005b6101b16101c1366004611320565b610467565b6101e66101d4366004611320565b60036020526000908152604090205481565b60405190815260200161016a565b6101b1610202366004611320565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600054610186906001600160a01b031681565b6101b16102453660046112c9565b6104e3565b6101b1610601565b6101e6610260366004611320565b60066020526000908152604090205481565b6001546001600160a01b0316610186565b610186610291366004611320565b6005602052600090815260409020546001600160a01b031681565b6101e66102ba366004611361565b610667565b6101b16102cd3660046113c3565b6106e5565b6101b16102e036600461142f565b61093c565b6101b16102f33660046113c3565b6109fd565b6101b1610306366004611320565b610b96565b610186610319366004611320565b6004602052600090815260409020546001600160a01b031681565b6001546001600160a01b031633146103935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60005b818110156104625760008383838181106103b2576103b26114b4565b90506020020160208101906103c79190611320565b6001600160a01b03818116600081815260056020818152604080842080549096168085526004835281852080546001600160a01b0319908116909155948690529282528554909316909455815181815293840192909252929350917f2ff7cbe4f1f12bb7d93999c06304c58410c46ebb8ddbcba627d52d93a6aaffb1910160405180910390a15050808061045a906114e0565b915050610396565b505050565b6001546001600160a01b031633146104c15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161038a565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b0316331461053d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161038a565b60005b8181101561046257600083838381811061055c5761055c6114b4565b90506020020160208101906105719190611320565b6001600160a01b03818116600081815260046020908152604080832080546001600160a01b031980821690925590951680845260058352928190208054909516909455835192835282018190529293507f2ff7cbe4f1f12bb7d93999c06304c58410c46ebb8ddbcba627d52d93a6aaffb1910160405180910390a1505080806105f9906114e0565b915050610540565b6001546001600160a01b0316331461065b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161038a565b6106656000610c78565b565b6000806106778787878787610cca565b604051632770a7eb60e21b8152336004820152602481018890529091506001600160a01b03881690639dc29fac90604401600060405180830381600087803b1580156106c257600080fd5b505af11580156106d6573d6000803e3d6000fd5b50929998505050505050505050565b6001546001600160a01b0316331461073f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161038a565b8281146107805760405162461bcd60e51b815260206004820152600f60248201526e0d8cadccee8d040dad2e6dac2e8c6d608b1b604482015260640161038a565b60005b838110156109355782828281811061079d5761079d6114b4565b90506020020160208101906107b29190611320565b600460008787858181106107c8576107c86114b4565b90506020020160208101906107dd9190611320565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b03191692909116919091179055848482818110610820576108206114b4565b90506020020160208101906108359190611320565b6005600085858581811061084b5761084b6114b4565b90506020020160208101906108609190611320565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b031916929091169190911790557feabeda8c7848101043c4c7d8a980cbc9078963ea815cd1cdfcab1dfdc80eb9118585838181106108c4576108c46114b4565b90506020020160208101906108d99190611320565b8484848181106108eb576108eb6114b4565b90506020020160208101906109009190611320565b604080516001600160a01b0393841681529290911660208301520160405180910390a18061092d816114e0565b915050610783565b5050505050565b6000546001600160a01b031633146109965760405162461bcd60e51b815260206004820152601c60248201527f63616c6c6572206973206e6f74206d6573736167652062726964676500000000604482015260640161038a565b6007546001600160a01b038481169116146109f35760405162461bcd60e51b815260206004820181905260248201527f73656e646572206973206e6f742072656d6f746520746f6b656e207661756c74604482015260640161038a565b6104628282611015565b6001546001600160a01b03163314610a575760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161038a565b828114610a985760405162461bcd60e51b815260206004820152600f60248201526e0d8cadccee8d040dad2e6dac2e8c6d608b1b604482015260640161038a565b60005b8381101561093557828282818110610ab557610ab56114b4565b9050602002013560066000878785818110610ad257610ad26114b4565b9050602002016020810190610ae79190611320565b6001600160a01b031681526020810191909152604001600020557f3796cd0b17a8734f8da819920625598e9a18be490f686725282e5383f1d06683858583818110610b3457610b346114b4565b9050602002016020810190610b499190611320565b848484818110610b5b57610b5b6114b4565b604080516001600160a01b0390951685526020918202939093013590840152500160405180910390a180610b8e816114e0565b915050610a9b565b6001546001600160a01b03163314610bf05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161038a565b6001600160a01b038116610c6c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161038a565b610c7581610c78565b50565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0385166000908152600660205260408120548511610d315760405162461bcd60e51b815260206004820152601060248201527f616d6f756e7420746f6f20736d616c6c00000000000000000000000000000000604482015260640161038a565b6001600160a01b038087166000908152600560205260409020541680610d995760405162461bcd60e51b815260206004820152600e60248201527f6e6f207661756c7420746f6b656e000000000000000000000000000000000000604482015260640161038a565b6001600160a01b03871660009081526003602052604081208054889290610dc19084906114f9565b90915550506040516bffffffffffffffffffffffff1933606090811b8216602084015289811b82166034840152604883018990527fffffffffffffffff00000000000000000000000000000000000000000000000060c089811b8216606886015288831b8416607086015287811b8216608486015246901b16608c84015230901b16609482015260009060a80160408051601f1981840301815291815281516020928301206000818152600290935291205490915060ff1615610eb65760405162461bcd60e51b815260206004820152600d60248201526c7265636f72642065786973747360981b604482015260640161038a565b6000818152600260209081526040808320805460ff1916600117905580516001600160a01b03868116938201939093529081018a9052908716606082015233608082015260a0810183905260c00160408051601f1981840301815290829052600080546007546301f5705760e51b855292945090926001600160a01b0391821692633eae0ae092610f53929116908690620f424090600401611512565b6020604051808303816000875af1158015610f72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f969190611578565b604080518581523360208201526001600160a01b038d811682840152606082018d90528a16608082015267ffffffffffffffff891660a082015260c0810183905290519192507f1b4b8f452b18b4a267e27ea158479a8124cef2cd93a0d59309667a8e933ab285919081900360e00190a1509098975050505050505050565b60008080808061102786880188611591565b6001600160a01b03808616600090815260046020526040902054959a5093985091965094509250168061109c5760405162461bcd60e51b815260206004820152600c60248201527f6e6f2070656720746f6b656e0000000000000000000000000000000000000000604482015260640161038a565b6040516bffffffffffffffffffffffff19606083811b821660208401526034830188905286811b8216605484015285811b82166068840152607c830185905230901b16609c82015260009060b00160408051601f1981840301815291815281516020928301206000818152600290935291205490915060ff16156111525760405162461bcd60e51b815260206004820152600d60248201526c7265636f72642065786973747360981b604482015260640161038a565b60008181526002602052604090819020805460ff19166001179055516340c10f1960e01b81526001600160a01b038681166004830152602482018890528316906340c10f1990604401600060405180830381600087803b1580156111b557600080fd5b505af11580156111c9573d6000803e3d6000fd5b505050506001600160a01b038216600090815260036020526040812080548892906111f59084906115ec565b9091555050604080518281526001600160a01b038781166020830152848116828401526060820189905260808201869052861660a082015290517f317276091e0f98226fe28cd525f29e0b1c7b3edd91bf9f85e5f0aba596074ac99181900360c00190a1505050505050505050565b60006020828403121561127657600080fd5b5035919050565b60008083601f84011261128f57600080fd5b50813567ffffffffffffffff8111156112a757600080fd5b6020830191508360208260051b85010111156112c257600080fd5b9250929050565b600080602083850312156112dc57600080fd5b823567ffffffffffffffff8111156112f357600080fd5b6112ff8582860161127d565b90969095509350505050565b6001600160a01b0381168114610c7557600080fd5b60006020828403121561133257600080fd5b813561133d8161130b565b9392505050565b803567ffffffffffffffff8116811461135c57600080fd5b919050565b600080600080600060a0868803121561137957600080fd5b85356113848161130b565b94506020860135935061139960408701611344565b925060608601356113a98161130b565b91506113b760808701611344565b90509295509295909350565b600080600080604085870312156113d957600080fd5b843567ffffffffffffffff808211156113f157600080fd5b6113fd8883890161127d565b9096509450602087013591508082111561141657600080fd5b506114238782880161127d565b95989497509550505050565b60008060006040848603121561144457600080fd5b833561144f8161130b565b9250602084013567ffffffffffffffff8082111561146c57600080fd5b818601915086601f83011261148057600080fd5b81358181111561148f57600080fd5b8760208285010111156114a157600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016114f2576114f26114ca565b5060010190565b8181038181111561150c5761150c6114ca565b92915050565b6001600160a01b038416815260006020606081840152845180606085015260005b8181101561154f57868101830151858201608001528201611533565b506000608082860101526080601f19601f83011685010192505050826040830152949350505050565b60006020828403121561158a57600080fd5b5051919050565b600080600080600060a086880312156115a957600080fd5b85356115b48161130b565b94506020860135935060408601356115cb8161130b565b925060608601356115db8161130b565b949793965091946080013592915050565b8082018082111561150c5761150c6114ca56fea2646970667358221220b1abe6cc6ef14a33c3463ea8f50140182fb4cb87713d7889f9d3993149bfbd4b64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2494,
        "contract": "contracts/token-bridge/PegBridge.sol:PegBridge",
        "label": "messageBridge",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 7,
        "contract": "contracts/token-bridge/PegBridge.sol:PegBridge",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 2542,
        "contract": "contracts/token-bridge/PegBridge.sol:PegBridge",
        "label": "records",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 2546,
        "contract": "contracts/token-bridge/PegBridge.sol:PegBridge",
        "label": "supplies",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2550,
        "contract": "contracts/token-bridge/PegBridge.sol:PegBridge",
        "label": "vaultToPegTokens",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 2554,
        "contract": "contracts/token-bridge/PegBridge.sol:PegBridge",
        "label": "pegToVaultTokens",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 2558,
        "contract": "contracts/token-bridge/PegBridge.sol:PegBridge",
        "label": "minBurn",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2560,
        "contract": "contracts/token-bridge/PegBridge.sol:PegBridge",
        "label": "remoteTokenVault",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}