{
  "address": "0x51C5efa1092dF7d086aFa02A2116d00749c8a177",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_messageBridge",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "depositId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "mintAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "MinDepositUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "withdrawId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "refId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "burnAccount",
          "type": "address"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_mintAccount",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_nonce",
          "type": "uint64"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messageBridge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        }
      ],
      "name": "receiveMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "records",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "remotePegBridge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_messageBridge",
          "type": "address"
        }
      ],
      "name": "setMessageBridge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "setMinDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_remotePegBridge",
          "type": "address"
        }
      ],
      "name": "setRemotePegBridge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9aa3896ef17365e4e6aeb5efc474ae741ca73c2ee197c49ce91526576e351bec",
  "receipt": {
    "to": null,
    "from": "0x9532f934EfcE6c4Bf5BA078b25fDd81a780FBdfB",
    "contractAddress": "0x51C5efa1092dF7d086aFa02A2116d00749c8a177",
    "transactionIndex": 32,
    "gasUsed": "1101611",
    "logsBloom": "0x
    "blockHash": "0xef7bb8ad1cbb8ec30c6fb3c4c615c7e9a8f0c320f13f10fb88a75412c02d6012",
    "transactionHash": "0x9aa3896ef17365e4e6aeb5efc474ae741ca73c2ee197c49ce91526576e351bec",
    "logs": [
      {
        "transactionIndex": 32,
        "blockNumber": 8623408,
        "transactionHash": "0x9aa3896ef17365e4e6aeb5efc474ae741ca73c2ee197c49ce91526576e351bec",
        "address": "0x51C5efa1092dF7d086aFa02A2116d00749c8a177",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000009532f934efce6c4bf5ba078b25fdd81a780fbdfb"
        ],
        "data": "0x",
        "logIndex": 50,
        "blockHash": "0xef7bb8ad1cbb8ec30c6fb3c4c615c7e9a8f0c320f13f10fb88a75412c02d6012"
      }
    ],
    "blockNumber": 8623408,
    "cumulativeGasUsed": "4626707",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5d748Cb4767D44842626122ED399177207ffD458"
  ],
  "numDeployments": 4,
  "solcInputHash": "ed97ce3b095369a6c844b227ea03481b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_messageBridge\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"depositId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"mintAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MinDepositUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"refId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"burnAccount\",\"type\":\"address\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_mintAccount\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageBridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"receiveMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"records\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remotePegBridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_messageBridge\",\"type\":\"address\"}],\"name\":\"setMessageBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"setMinDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_remotePegBridge\",\"type\":\"address\"}],\"name\":\"setRemotePegBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token-bridge/TokenVault.sol\":\"TokenVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/interfaces/IEthereumLightClient.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity 0.8.18;\\n\\ninterface IEthereumLightClient {\\n    function finalizedExecutionStateRootAndSlot() external view returns (bytes32 root, uint64 slot);\\n}\\n\",\"keccak256\":\"0x8cc0b8d512c5e0cd18eb0fac842169a65eeca67d5e67cad48d19a52978fb3d73\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/message-bridge/interfaces/IMessageBridge.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicensed\\n\\npragma solidity 0.8.18;\\n\\nimport \\\"../../interfaces/IEthereumLightClient.sol\\\";\\n\\ninterface IMessageBridge {\\n    enum MessageStatus {\\n        NEW,\\n        INVALID,\\n        FAILED,\\n        EXECUTED\\n    }\\n\\n    event MessageSent(bytes32 indexed messageHash, uint256 indexed nonce, bytes message);\\n    event MessageExecuted(bytes32 indexed messageHash, uint256 indexed nonce, bytes message, bool success);\\n\\n    function lightClient() external view returns (IEthereumLightClient);\\n\\n    function sendMessage(\\n        address receiver,\\n        bytes calldata message,\\n        uint256 gasLimit\\n    ) external returns (bytes32);\\n\\n    function executeMessage(\\n        bytes calldata message,\\n        bytes[] calldata accountProof,\\n        bytes[] calldata storageProof\\n    ) external returns (bool);\\n\\n    function finalizedExecutionStateRootAndSlot() external view returns (bytes32 root, uint64 slot);\\n}\\n\",\"keccak256\":\"0xb823e38ec74306d5a2fc1c6b4616881117d0f8c9f16cd6f0fcc10957beb5dff2\",\"license\":\"Unlicensed\"},\"contracts/token-bridge/MessageApp.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity 0.8.18;\\n\\nabstract contract MessageApp {\\n    modifier onlyMessageBridge() {\\n        require(msg.sender == messageBridge, \\\"caller is not message bridge\\\");\\n        _;\\n    }\\n    address public messageBridge;\\n\\n    function setMessageBridge(address _messageBridge) external {\\n        messageBridge = _messageBridge;\\n    }\\n}\\n\",\"keccak256\":\"0x79dca498bb9881b8b28688ef175901000e55c79e692b7183ee063e1e9b906cdf\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/token-bridge/TokenVault.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicensed\\npragma solidity 0.8.18;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"../message-bridge/interfaces/IMessageBridge.sol\\\";\\nimport \\\"./MessageApp.sol\\\";\\n\\ncontract TokenVault is MessageApp, Ownable {\\n    using SafeERC20 for IERC20;\\n    uint256 private constant GAS_LIMIT = 1000000;\\n\\n    mapping(bytes32 => bool) public records;\\n\\n    address public remotePegBridge;\\n\\n    mapping(address => uint256) public minDeposit;\\n\\n    event Deposited(\\n        bytes32 depositId,\\n        address depositor,\\n        address token,\\n        uint256 amount,\\n        address mintAccount,\\n        uint64 nonce,\\n        bytes32 messageId\\n    );\\n\\n    event Withdrawn(\\n        bytes32 withdrawId,\\n        address receiver,\\n        address token,\\n        uint256 amount,\\n        bytes32 refId,\\n        address burnAccount\\n    );\\n\\n    event MinDepositUpdated(address token, uint256 amount);\\n\\n    constructor(address _messageBridge) {\\n        messageBridge = _messageBridge;\\n    }\\n\\n    function deposit(address _token, uint256 _amount, address _mintAccount, uint64 _nonce) external returns (bytes32) {\\n        (bytes32 depositId, bytes32 messageId) = _deposit(_token, _amount, _mintAccount, _nonce);\\n        IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\n        emit Deposited(depositId, msg.sender, _token, _amount, _mintAccount, _nonce, messageId);\\n        return depositId;\\n    }\\n\\n    function _deposit(\\n        address _token,\\n        uint256 _amount,\\n        address _mintAccount,\\n        uint64 _nonce\\n    ) private returns (bytes32, bytes32) {\\n        require(_amount > minDeposit[_token], \\\"amount too small\\\");\\n        bytes32 depositId = keccak256(\\n            abi.encodePacked(msg.sender, _token, _amount, _mintAccount, _nonce, uint64(block.chainid), address(this))\\n        );\\n        require(records[depositId] == false, \\\"record exists\\\");\\n        bytes memory message = abi.encode(_token, _amount, _mintAccount, msg.sender, depositId);\\n        bytes32 messageId = IMessageBridge(messageBridge).sendMessage(remotePegBridge, message, GAS_LIMIT);\\n        records[depositId] = true;\\n        return (depositId, messageId);\\n    }\\n\\n    function receiveMessage(address _sender, bytes calldata _message) external onlyMessageBridge {\\n        require(_sender == remotePegBridge, \\\"sender is not remote peg bridge\\\");\\n        _withdraw(_message);\\n    }\\n\\n    function _withdraw(bytes calldata _message) private {\\n        (address token, uint256 amount, address receiver, address burnAccount, bytes32 burnId) = abi.decode(\\n            (_message),\\n            (address, uint256, address, address, bytes32)\\n        );\\n        bytes32 withdrawId = keccak256(abi.encodePacked(receiver, token, amount, burnAccount, burnId, address(this)));\\n        require(records[withdrawId] == false, \\\"record exists\\\");\\n        records[withdrawId] = true;\\n        IERC20(token).safeTransfer(receiver, amount);\\n        emit Withdrawn(withdrawId, receiver, token, amount, burnId, burnAccount);\\n    }\\n\\n    function setMinDeposit(address[] calldata _tokens, uint256[] calldata _amounts) external onlyOwner {\\n        require(_tokens.length == _amounts.length, \\\"length mismatch\\\");\\n        for (uint256 i = 0; i < _tokens.length; i++) {\\n            minDeposit[_tokens[i]] = _amounts[i];\\n            emit MinDepositUpdated(_tokens[i], _amounts[i]);\\n        }\\n    }\\n\\n    function setRemotePegBridge(address _remotePegBridge) external onlyOwner {\\n        remotePegBridge = _remotePegBridge;\\n    }\\n}\\n\",\"keccak256\":\"0xc00aa0fcc4c8dac858645c440f5cef031515e55dd2d8023ca6fd0e834fae096e\",\"license\":\"Unlicensed\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161130738038061130783398101604081905261002f916100af565b6100383361005d565b600080546001600160a01b0319166001600160a01b03929092169190911790556100df565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156100c157600080fd5b81516001600160a01b03811681146100d857600080fd5b9392505050565b611219806100ee6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063715018a611610081578063bca8db711161005b578063bca8db71146101fb578063ca0d4d8c1461020e578063f2fde38b1461022157600080fd5b8063715018a6146101cf5780637c0905a9146101d75780638da5cb5b146101ea57600080fd5b80633c29f839116100b25780633c29f8391461017b57806352661863146101a95780635ec2fa26146101bc57600080fd5b806301e64725146100d95780632be16dce1461011157806333a42db114610150575b600080fd5b6100fc6100e7366004610e77565b60026020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61014e61011f366004610ea5565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b005b600054610163906001600160a01b031681565b6040516001600160a01b039091168152602001610108565b61019b610189366004610ea5565b60046020526000908152604090205481565b604051908152602001610108565b600354610163906001600160a01b031681565b61014e6101ca366004610f0e565b610234565b61014e6103e7565b61014e6101e5366004610ea5565b61044d565b6001546001600160a01b0316610163565b61014e610209366004610f7a565b6104d6565b61019b61021c366004610fff565b61059c565b61014e61022f366004610ea5565b61063e565b6001546001600160a01b031633146102935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b8281146102e25760405162461bcd60e51b815260206004820152600f60248201527f6c656e677468206d69736d617463680000000000000000000000000000000000604482015260640161028a565b60005b838110156103e0578282828181106102ff576102ff61105f565b905060200201356004600087878581811061031c5761031c61105f565b90506020020160208101906103319190610ea5565b6001600160a01b031681526020810191909152604001600020557f0f48d517989455cd80ed52427e80553e66f9b69fd5cee8e26bd1a1f9c364fba685858381811061037e5761037e61105f565b90506020020160208101906103939190610ea5565b8484848181106103a5576103a561105f565b604080516001600160a01b0390951685526020918202939093013590840152500160405180910390a1806103d881611075565b9150506102e5565b5050505050565b6001546001600160a01b031633146104415760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028a565b61044b6000610720565b565b6001546001600160a01b031633146104a75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028a565b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b031633146105305760405162461bcd60e51b815260206004820152601c60248201527f63616c6c6572206973206e6f74206d6573736167652062726964676500000000604482015260640161028a565b6003546001600160a01b0384811691161461058d5760405162461bcd60e51b815260206004820152601f60248201527f73656e646572206973206e6f742072656d6f7465207065672062726964676500604482015260640161028a565b610597828261077f565b505050565b60008060006105ad878787876108ea565b90925090506105c76001600160a01b038816333089610b2a565b604080518381523360208201526001600160a01b0389811682840152606082018990528716608082015267ffffffffffffffff861660a082015260c0810183905290517f3151eb0c52871b9cf9243864e37490145ad0396a42ce45349fdfd20b16a2487f9181900360e00190a15095945050505050565b6001546001600160a01b031633146106985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028a565b6001600160a01b0381166107145760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161028a565b61071d81610720565b50565b600180546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000808080806107918688018861109c565b6040516bffffffffffffffffffffffff19606085811b8216602084015287811b821660348401526048830187905284811b82166068840152607c830184905230901b16609c8201529499509297509095509350915060009060b00160408051601f1981840301815291815281516020928301206000818152600290935291205490915060ff16156108545760405162461bcd60e51b815260206004820152600d60248201526c7265636f72642065786973747360981b604482015260640161028a565b6000818152600260205260409020805460ff191660011790556108816001600160a01b0387168587610bc8565b604080518281526001600160a01b038681166020830152888116828401526060820188905260808201859052851660a082015290517fc20f8288cc0b746ccfa1837a99fcdc5225b43ab191419bf6b43fe3802c4829569181900360c00190a15050505050505050565b6001600160a01b038416600090815260046020526040812054819085116109535760405162461bcd60e51b815260206004820152601060248201527f616d6f756e7420746f6f20736d616c6c00000000000000000000000000000000604482015260640161028a565b6040516bffffffffffffffffffffffff1933606090811b8216602084015288811b821660348401526048830188905286811b821660688401527fffffffffffffffff00000000000000000000000000000000000000000000000060c087811b8216607c86015246901b16608484015230901b16608c82015260009060a00160408051601f1981840301815291815281516020928301206000818152600290935291205490915060ff1615610a395760405162461bcd60e51b815260206004820152600d60248201526c7265636f72642065786973747360981b604482015260640161028a565b604080516001600160a01b03808a166020830152918101889052908616606082015233608082015260a0810182905260009060c00160408051601f1981840301815290829052600080546003546301f5705760e51b855292945090926001600160a01b0391821692633eae0ae092610abd929116908690620f424090600401611147565b6020604051808303816000875af1158015610adc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b009190611179565b6000848152600260205260409020805460ff19166001179055929450919250505094509492505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610bc29085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610bf8565b50505050565b6040516001600160a01b03831660248201526044810182905261059790849063a9059cbb60e01b90606401610b5e565b6000610c4d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610cdd9092919063ffffffff16565b8051909150156105975780806020019051810190610c6b9190611192565b6105975760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161028a565b6060610cec8484600085610cf6565b90505b9392505050565b606082471015610d6e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161028a565b6001600160a01b0385163b610dc55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161028a565b600080866001600160a01b03168587604051610de191906111b4565b60006040518083038185875af1925050503d8060008114610e1e576040519150601f19603f3d011682016040523d82523d6000602084013e610e23565b606091505b5091509150610e33828286610e3e565b979650505050505050565b60608315610e4d575081610cef565b825115610e5d5782518084602001fd5b8160405162461bcd60e51b815260040161028a91906111d0565b600060208284031215610e8957600080fd5b5035919050565b6001600160a01b038116811461071d57600080fd5b600060208284031215610eb757600080fd5b8135610cef81610e90565b60008083601f840112610ed457600080fd5b50813567ffffffffffffffff811115610eec57600080fd5b6020830191508360208260051b8501011115610f0757600080fd5b9250929050565b60008060008060408587031215610f2457600080fd5b843567ffffffffffffffff80821115610f3c57600080fd5b610f4888838901610ec2565b90965094506020870135915080821115610f6157600080fd5b50610f6e87828801610ec2565b95989497509550505050565b600080600060408486031215610f8f57600080fd5b8335610f9a81610e90565b9250602084013567ffffffffffffffff80821115610fb757600080fd5b818601915086601f830112610fcb57600080fd5b813581811115610fda57600080fd5b876020828501011115610fec57600080fd5b6020830194508093505050509250925092565b6000806000806080858703121561101557600080fd5b843561102081610e90565b935060208501359250604085013561103781610e90565b9150606085013567ffffffffffffffff8116811461105457600080fd5b939692955090935050565b634e487b7160e01b600052603260045260246000fd5b60006001820161109557634e487b7160e01b600052601160045260246000fd5b5060010190565b600080600080600060a086880312156110b457600080fd5b85356110bf81610e90565b94506020860135935060408601356110d681610e90565b925060608601356110e681610e90565b949793965091946080013592915050565b60005b838110156111125781810151838201526020016110fa565b50506000910152565b600081518084526111338160208601602086016110f7565b601f01601f19169290920160200192915050565b6001600160a01b0384168152606060208201526000611169606083018561111b565b9050826040830152949350505050565b60006020828403121561118b57600080fd5b5051919050565b6000602082840312156111a457600080fd5b81518015158114610cef57600080fd5b600082516111c68184602087016110f7565b9190910192915050565b602081526000610cef602083018461111b56fea2646970667358221220ad483c6c3ff5235cc68d9b058f0e9a7b2c6f5051dd98fbbaa32955532735737b64736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100d45760003560e01c8063715018a611610081578063bca8db711161005b578063bca8db71146101fb578063ca0d4d8c1461020e578063f2fde38b1461022157600080fd5b8063715018a6146101cf5780637c0905a9146101d75780638da5cb5b146101ea57600080fd5b80633c29f839116100b25780633c29f8391461017b57806352661863146101a95780635ec2fa26146101bc57600080fd5b806301e64725146100d95780632be16dce1461011157806333a42db114610150575b600080fd5b6100fc6100e7366004610e77565b60026020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61014e61011f366004610ea5565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b005b600054610163906001600160a01b031681565b6040516001600160a01b039091168152602001610108565b61019b610189366004610ea5565b60046020526000908152604090205481565b604051908152602001610108565b600354610163906001600160a01b031681565b61014e6101ca366004610f0e565b610234565b61014e6103e7565b61014e6101e5366004610ea5565b61044d565b6001546001600160a01b0316610163565b61014e610209366004610f7a565b6104d6565b61019b61021c366004610fff565b61059c565b61014e61022f366004610ea5565b61063e565b6001546001600160a01b031633146102935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b8281146102e25760405162461bcd60e51b815260206004820152600f60248201527f6c656e677468206d69736d617463680000000000000000000000000000000000604482015260640161028a565b60005b838110156103e0578282828181106102ff576102ff61105f565b905060200201356004600087878581811061031c5761031c61105f565b90506020020160208101906103319190610ea5565b6001600160a01b031681526020810191909152604001600020557f0f48d517989455cd80ed52427e80553e66f9b69fd5cee8e26bd1a1f9c364fba685858381811061037e5761037e61105f565b90506020020160208101906103939190610ea5565b8484848181106103a5576103a561105f565b604080516001600160a01b0390951685526020918202939093013590840152500160405180910390a1806103d881611075565b9150506102e5565b5050505050565b6001546001600160a01b031633146104415760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028a565b61044b6000610720565b565b6001546001600160a01b031633146104a75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028a565b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b031633146105305760405162461bcd60e51b815260206004820152601c60248201527f63616c6c6572206973206e6f74206d6573736167652062726964676500000000604482015260640161028a565b6003546001600160a01b0384811691161461058d5760405162461bcd60e51b815260206004820152601f60248201527f73656e646572206973206e6f742072656d6f7465207065672062726964676500604482015260640161028a565b610597828261077f565b505050565b60008060006105ad878787876108ea565b90925090506105c76001600160a01b038816333089610b2a565b604080518381523360208201526001600160a01b0389811682840152606082018990528716608082015267ffffffffffffffff861660a082015260c0810183905290517f3151eb0c52871b9cf9243864e37490145ad0396a42ce45349fdfd20b16a2487f9181900360e00190a15095945050505050565b6001546001600160a01b031633146106985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028a565b6001600160a01b0381166107145760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161028a565b61071d81610720565b50565b600180546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000808080806107918688018861109c565b6040516bffffffffffffffffffffffff19606085811b8216602084015287811b821660348401526048830187905284811b82166068840152607c830184905230901b16609c8201529499509297509095509350915060009060b00160408051601f1981840301815291815281516020928301206000818152600290935291205490915060ff16156108545760405162461bcd60e51b815260206004820152600d60248201526c7265636f72642065786973747360981b604482015260640161028a565b6000818152600260205260409020805460ff191660011790556108816001600160a01b0387168587610bc8565b604080518281526001600160a01b038681166020830152888116828401526060820188905260808201859052851660a082015290517fc20f8288cc0b746ccfa1837a99fcdc5225b43ab191419bf6b43fe3802c4829569181900360c00190a15050505050505050565b6001600160a01b038416600090815260046020526040812054819085116109535760405162461bcd60e51b815260206004820152601060248201527f616d6f756e7420746f6f20736d616c6c00000000000000000000000000000000604482015260640161028a565b6040516bffffffffffffffffffffffff1933606090811b8216602084015288811b821660348401526048830188905286811b821660688401527fffffffffffffffff00000000000000000000000000000000000000000000000060c087811b8216607c86015246901b16608484015230901b16608c82015260009060a00160408051601f1981840301815291815281516020928301206000818152600290935291205490915060ff1615610a395760405162461bcd60e51b815260206004820152600d60248201526c7265636f72642065786973747360981b604482015260640161028a565b604080516001600160a01b03808a166020830152918101889052908616606082015233608082015260a0810182905260009060c00160408051601f1981840301815290829052600080546003546301f5705760e51b855292945090926001600160a01b0391821692633eae0ae092610abd929116908690620f424090600401611147565b6020604051808303816000875af1158015610adc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b009190611179565b6000848152600260205260409020805460ff19166001179055929450919250505094509492505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610bc29085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610bf8565b50505050565b6040516001600160a01b03831660248201526044810182905261059790849063a9059cbb60e01b90606401610b5e565b6000610c4d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610cdd9092919063ffffffff16565b8051909150156105975780806020019051810190610c6b9190611192565b6105975760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161028a565b6060610cec8484600085610cf6565b90505b9392505050565b606082471015610d6e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161028a565b6001600160a01b0385163b610dc55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161028a565b600080866001600160a01b03168587604051610de191906111b4565b60006040518083038185875af1925050503d8060008114610e1e576040519150601f19603f3d011682016040523d82523d6000602084013e610e23565b606091505b5091509150610e33828286610e3e565b979650505050505050565b60608315610e4d575081610cef565b825115610e5d5782518084602001fd5b8160405162461bcd60e51b815260040161028a91906111d0565b600060208284031215610e8957600080fd5b5035919050565b6001600160a01b038116811461071d57600080fd5b600060208284031215610eb757600080fd5b8135610cef81610e90565b60008083601f840112610ed457600080fd5b50813567ffffffffffffffff811115610eec57600080fd5b6020830191508360208260051b8501011115610f0757600080fd5b9250929050565b60008060008060408587031215610f2457600080fd5b843567ffffffffffffffff80821115610f3c57600080fd5b610f4888838901610ec2565b90965094506020870135915080821115610f6157600080fd5b50610f6e87828801610ec2565b95989497509550505050565b600080600060408486031215610f8f57600080fd5b8335610f9a81610e90565b9250602084013567ffffffffffffffff80821115610fb757600080fd5b818601915086601f830112610fcb57600080fd5b813581811115610fda57600080fd5b876020828501011115610fec57600080fd5b6020830194508093505050509250925092565b6000806000806080858703121561101557600080fd5b843561102081610e90565b935060208501359250604085013561103781610e90565b9150606085013567ffffffffffffffff8116811461105457600080fd5b939692955090935050565b634e487b7160e01b600052603260045260246000fd5b60006001820161109557634e487b7160e01b600052601160045260246000fd5b5060010190565b600080600080600060a086880312156110b457600080fd5b85356110bf81610e90565b94506020860135935060408601356110d681610e90565b925060608601356110e681610e90565b949793965091946080013592915050565b60005b838110156111125781810151838201526020016110fa565b50506000910152565b600081518084526111338160208601602086016110f7565b601f01601f19169290920160200192915050565b6001600160a01b0384168152606060208201526000611169606083018561111b565b9050826040830152949350505050565b60006020828403121561118b57600080fd5b5051919050565b6000602082840312156111a457600080fd5b81518015158114610cef57600080fd5b600082516111c68184602087016110f7565b9190910192915050565b602081526000610cef602083018461111b56fea2646970667358221220ad483c6c3ff5235cc68d9b058f0e9a7b2c6f5051dd98fbbaa32955532735737b64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2494,
        "contract": "contracts/token-bridge/TokenVault.sol:TokenVault",
        "label": "messageBridge",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 7,
        "contract": "contracts/token-bridge/TokenVault.sol:TokenVault",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 3151,
        "contract": "contracts/token-bridge/TokenVault.sol:TokenVault",
        "label": "records",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 3153,
        "contract": "contracts/token-bridge/TokenVault.sol:TokenVault",
        "label": "remotePegBridge",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 3157,
        "contract": "contracts/token-bridge/TokenVault.sol:TokenVault",
        "label": "minDeposit",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}